// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.6
// source: model.proto

package stubs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GApplianceType int32

const (
	GApplianceType_G_APPLIANCE_TYPE_HEAT    GApplianceType = 0
	GApplianceType_G_APPLIANCE_TYPE_COLD    GApplianceType = 1
	GApplianceType_G_APPLIANCE_TYPE_CUTLERY GApplianceType = 2
)

// Enum value maps for GApplianceType.
var (
	GApplianceType_name = map[int32]string{
		0: "G_APPLIANCE_TYPE_HEAT",
		1: "G_APPLIANCE_TYPE_COLD",
		2: "G_APPLIANCE_TYPE_CUTLERY",
	}
	GApplianceType_value = map[string]int32{
		"G_APPLIANCE_TYPE_HEAT":    0,
		"G_APPLIANCE_TYPE_COLD":    1,
		"G_APPLIANCE_TYPE_CUTLERY": 2,
	}
)

func (x GApplianceType) Enum() *GApplianceType {
	p := new(GApplianceType)
	*p = x
	return p
}

func (x GApplianceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GApplianceType) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[0].Descriptor()
}

func (GApplianceType) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[0]
}

func (x GApplianceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GApplianceType.Descriptor instead.
func (GApplianceType) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0}
}

type GRecipeTypes int32

const (
	GRecipeTypes_G_RECIPE_TYPES_COOK  GRecipeTypes = 0
	GRecipeTypes_G_RECIPE_TYPES_GRILL GRecipeTypes = 1
	GRecipeTypes_G_RECIPE_TYPES_FRY   GRecipeTypes = 2
	GRecipeTypes_G_RECIPE_TYPES_STEW  GRecipeTypes = 3
)

// Enum value maps for GRecipeTypes.
var (
	GRecipeTypes_name = map[int32]string{
		0: "G_RECIPE_TYPES_COOK",
		1: "G_RECIPE_TYPES_GRILL",
		2: "G_RECIPE_TYPES_FRY",
		3: "G_RECIPE_TYPES_STEW",
	}
	GRecipeTypes_value = map[string]int32{
		"G_RECIPE_TYPES_COOK":  0,
		"G_RECIPE_TYPES_GRILL": 1,
		"G_RECIPE_TYPES_FRY":   2,
		"G_RECIPE_TYPES_STEW":  3,
	}
)

func (x GRecipeTypes) Enum() *GRecipeTypes {
	p := new(GRecipeTypes)
	*p = x
	return p
}

func (x GRecipeTypes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GRecipeTypes) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[1].Descriptor()
}

func (GRecipeTypes) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[1]
}

func (x GRecipeTypes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GRecipeTypes.Descriptor instead.
func (GRecipeTypes) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{1}
}

type GKnifeType int32

const (
	GKnifeType_G_KNIFE_TYPE_CHEFS_KNIFE  GKnifeType = 0
	GKnifeType_G_KNIFE_TYPE_PARING_KNIFE GKnifeType = 1
	GKnifeType_G_KNIFE_TYPE_BREAD_KNIFE  GKnifeType = 2
)

// Enum value maps for GKnifeType.
var (
	GKnifeType_name = map[int32]string{
		0: "G_KNIFE_TYPE_CHEFS_KNIFE",
		1: "G_KNIFE_TYPE_PARING_KNIFE",
		2: "G_KNIFE_TYPE_BREAD_KNIFE",
	}
	GKnifeType_value = map[string]int32{
		"G_KNIFE_TYPE_CHEFS_KNIFE":  0,
		"G_KNIFE_TYPE_PARING_KNIFE": 1,
		"G_KNIFE_TYPE_BREAD_KNIFE":  2,
	}
)

func (x GKnifeType) Enum() *GKnifeType {
	p := new(GKnifeType)
	*p = x
	return p
}

func (x GKnifeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GKnifeType) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[2].Descriptor()
}

func (GKnifeType) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[2]
}

func (x GKnifeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GKnifeType.Descriptor instead.
func (GKnifeType) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{2}
}

type GChefType int32

const (
	GChefType_G_CHEF_TYPE_SENIOR_CHEF GChefType = 0
	GChefType_G_CHEF_TYPE_SOUS_CHEF   GChefType = 1
	GChefType_G_CHEF_TYPE_PASTRY_CHEF GChefType = 2
	GChefType_G_CHEF_TYPE_FISH_CHEF   GChefType = 3
)

// Enum value maps for GChefType.
var (
	GChefType_name = map[int32]string{
		0: "G_CHEF_TYPE_SENIOR_CHEF",
		1: "G_CHEF_TYPE_SOUS_CHEF",
		2: "G_CHEF_TYPE_PASTRY_CHEF",
		3: "G_CHEF_TYPE_FISH_CHEF",
	}
	GChefType_value = map[string]int32{
		"G_CHEF_TYPE_SENIOR_CHEF": 0,
		"G_CHEF_TYPE_SOUS_CHEF":   1,
		"G_CHEF_TYPE_PASTRY_CHEF": 2,
		"G_CHEF_TYPE_FISH_CHEF":   3,
	}
)

func (x GChefType) Enum() *GChefType {
	p := new(GChefType)
	*p = x
	return p
}

func (x GChefType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GChefType) Descriptor() protoreflect.EnumDescriptor {
	return file_model_proto_enumTypes[3].Descriptor()
}

func (GChefType) Type() protoreflect.EnumType {
	return &file_model_proto_enumTypes[3]
}

func (x GChefType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GChefType.Descriptor instead.
func (GChefType) EnumDescriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3}
}

type GCalcParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parameter1 int32                  `protobuf:"varint,2,opt,name=parameter1,proto3" json:"parameter1,omitempty"`
	Parameter2 int32                  `protobuf:"varint,1,opt,name=parameter2,proto3" json:"parameter2,omitempty"`
	Parameter3 *wrapperspb.Int32Value `protobuf:"bytes,3,opt,name=parameter3,proto3" json:"parameter3,omitempty"`
	Parameter4 *wrapperspb.Int32Value `protobuf:"bytes,4,opt,name=parameter4,proto3" json:"parameter4,omitempty"`
	Parameter5 int32                  `protobuf:"varint,9,opt,name=parameter5,proto3" json:"parameter5,omitempty"`
}

func (x *GCalcParameters) Reset() {
	*x = GCalcParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCalcParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCalcParameters) ProtoMessage() {}

func (x *GCalcParameters) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCalcParameters.ProtoReflect.Descriptor instead.
func (*GCalcParameters) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{0}
}

func (x *GCalcParameters) GetParameter1() int32 {
	if x != nil {
		return x.Parameter1
	}
	return 0
}

func (x *GCalcParameters) GetParameter2() int32 {
	if x != nil {
		return x.Parameter2
	}
	return 0
}

func (x *GCalcParameters) GetParameter3() *wrapperspb.Int32Value {
	if x != nil {
		return x.Parameter3
	}
	return nil
}

func (x *GCalcParameters) GetParameter4() *wrapperspb.Int32Value {
	if x != nil {
		return x.Parameter4
	}
	return nil
}

func (x *GCalcParameters) GetParameter5() int32 {
	if x != nil {
		return x.Parameter5
	}
	return 0
}

type GListOfCalcParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GCalcParameters `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfCalcParameters) Reset() {
	*x = GListOfCalcParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfCalcParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfCalcParameters) ProtoMessage() {}

func (x *GListOfCalcParameters) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfCalcParameters.ProtoReflect.Descriptor instead.
func (*GListOfCalcParameters) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{1}
}

func (x *GListOfCalcParameters) GetItems() []*GCalcParameters {
	if x != nil {
		return x.Items
	}
	return nil
}

type GCalcResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32 `protobuf:"varint,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *GCalcResult) Reset() {
	*x = GCalcResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCalcResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCalcResult) ProtoMessage() {}

func (x *GCalcResult) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCalcResult.ProtoReflect.Descriptor instead.
func (*GCalcResult) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{2}
}

func (x *GCalcResult) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type GListOfCalcResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GCalcResult `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfCalcResult) Reset() {
	*x = GListOfCalcResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfCalcResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfCalcResult) ProtoMessage() {}

func (x *GListOfCalcResult) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfCalcResult.ProtoReflect.Descriptor instead.
func (*GListOfCalcResult) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{3}
}

func (x *GListOfCalcResult) GetItems() []*GCalcResult {
	if x != nil {
		return x.Items
	}
	return nil
}

type GCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title                string        `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	MainComponent        *GComponent   `protobuf:"bytes,3,opt,name=main_component,json=mainComponent,proto3" json:"main_component,omitempty"`
	AlternativeComponent *GComponent   `protobuf:"bytes,4,opt,name=alternative_component,json=alternativeComponent,proto3" json:"alternative_component,omitempty"`
	OtherComponents      []*GComponent `protobuf:"bytes,5,rep,name=other_components,json=otherComponents,proto3" json:"other_components,omitempty"`
	SecondaryComponents  []*GComponent `protobuf:"bytes,6,rep,name=secondary_components,json=secondaryComponents,proto3" json:"secondary_components,omitempty"`
}

func (x *GCategory) Reset() {
	*x = GCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCategory) ProtoMessage() {}

func (x *GCategory) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCategory.ProtoReflect.Descriptor instead.
func (*GCategory) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{4}
}

func (x *GCategory) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GCategory) GetMainComponent() *GComponent {
	if x != nil {
		return x.MainComponent
	}
	return nil
}

func (x *GCategory) GetAlternativeComponent() *GComponent {
	if x != nil {
		return x.AlternativeComponent
	}
	return nil
}

func (x *GCategory) GetOtherComponents() []*GComponent {
	if x != nil {
		return x.OtherComponents
	}
	return nil
}

func (x *GCategory) GetSecondaryComponents() []*GComponent {
	if x != nil {
		return x.SecondaryComponents
	}
	return nil
}

type GListOfCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GCategory `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfCategory) Reset() {
	*x = GListOfCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfCategory) ProtoMessage() {}

func (x *GListOfCategory) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfCategory.ProtoReflect.Descriptor instead.
func (*GListOfCategory) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{5}
}

func (x *GListOfCategory) GetItems() []*GCategory {
	if x != nil {
		return x.Items
	}
	return nil
}

type GComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *GComponent) Reset() {
	*x = GComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GComponent) ProtoMessage() {}

func (x *GComponent) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GComponent.ProtoReflect.Descriptor instead.
func (*GComponent) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{6}
}

func (x *GComponent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GListOfComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GComponent `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfComponent) Reset() {
	*x = GListOfComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfComponent) ProtoMessage() {}

func (x *GListOfComponent) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfComponent.ProtoReflect.Descriptor instead.
func (*GListOfComponent) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{7}
}

func (x *GListOfComponent) GetItems() []*GComponent {
	if x != nil {
		return x.Items
	}
	return nil
}

type GConstructObject1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Number int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *GConstructObject1) Reset() {
	*x = GConstructObject1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GConstructObject1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GConstructObject1) ProtoMessage() {}

func (x *GConstructObject1) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GConstructObject1.ProtoReflect.Descriptor instead.
func (*GConstructObject1) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{8}
}

func (x *GConstructObject1) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GConstructObject1) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type GListOfConstructObject1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GConstructObject1 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfConstructObject1) Reset() {
	*x = GListOfConstructObject1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfConstructObject1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfConstructObject1) ProtoMessage() {}

func (x *GListOfConstructObject1) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfConstructObject1.ProtoReflect.Descriptor instead.
func (*GListOfConstructObject1) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{9}
}

func (x *GListOfConstructObject1) GetItems() []*GConstructObject1 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GConstructObject2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Number int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *GConstructObject2) Reset() {
	*x = GConstructObject2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GConstructObject2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GConstructObject2) ProtoMessage() {}

func (x *GConstructObject2) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GConstructObject2.ProtoReflect.Descriptor instead.
func (*GConstructObject2) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{10}
}

func (x *GConstructObject2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GConstructObject2) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type GListOfConstructObject2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GConstructObject2 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfConstructObject2) Reset() {
	*x = GListOfConstructObject2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfConstructObject2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfConstructObject2) ProtoMessage() {}

func (x *GListOfConstructObject2) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfConstructObject2.ProtoReflect.Descriptor instead.
func (*GListOfConstructObject2) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{11}
}

func (x *GListOfConstructObject2) GetItems() []*GConstructObject2 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GConstructObject3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Number int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *GConstructObject3) Reset() {
	*x = GConstructObject3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GConstructObject3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GConstructObject3) ProtoMessage() {}

func (x *GConstructObject3) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GConstructObject3.ProtoReflect.Descriptor instead.
func (*GConstructObject3) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{12}
}

func (x *GConstructObject3) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GConstructObject3) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type GListOfConstructObject3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GConstructObject3 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfConstructObject3) Reset() {
	*x = GListOfConstructObject3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfConstructObject3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfConstructObject3) ProtoMessage() {}

func (x *GListOfConstructObject3) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfConstructObject3.ProtoReflect.Descriptor instead.
func (*GListOfConstructObject3) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{13}
}

func (x *GListOfConstructObject3) GetItems() []*GConstructObject3 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GConstructObject4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Number int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *GConstructObject4) Reset() {
	*x = GConstructObject4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GConstructObject4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GConstructObject4) ProtoMessage() {}

func (x *GConstructObject4) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GConstructObject4.ProtoReflect.Descriptor instead.
func (*GConstructObject4) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{14}
}

func (x *GConstructObject4) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GConstructObject4) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type GListOfConstructObject4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GConstructObject4 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfConstructObject4) Reset() {
	*x = GListOfConstructObject4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfConstructObject4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfConstructObject4) ProtoMessage() {}

func (x *GListOfConstructObject4) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfConstructObject4.ProtoReflect.Descriptor instead.
func (*GListOfConstructObject4) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{15}
}

func (x *GListOfConstructObject4) GetItems() []*GConstructObject4 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GConstructObject5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Number int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *GConstructObject5) Reset() {
	*x = GConstructObject5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GConstructObject5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GConstructObject5) ProtoMessage() {}

func (x *GConstructObject5) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GConstructObject5.ProtoReflect.Descriptor instead.
func (*GConstructObject5) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{16}
}

func (x *GConstructObject5) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GConstructObject5) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type GListOfConstructObject5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GConstructObject5 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfConstructObject5) Reset() {
	*x = GListOfConstructObject5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfConstructObject5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfConstructObject5) ProtoMessage() {}

func (x *GListOfConstructObject5) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfConstructObject5.ProtoReflect.Descriptor instead.
func (*GListOfConstructObject5) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{17}
}

func (x *GListOfConstructObject5) GetItems() []*GConstructObject5 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GConstructObject6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Number *wrapperspb.Int32Value  `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *GConstructObject6) Reset() {
	*x = GConstructObject6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GConstructObject6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GConstructObject6) ProtoMessage() {}

func (x *GConstructObject6) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GConstructObject6.ProtoReflect.Descriptor instead.
func (*GConstructObject6) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{18}
}

func (x *GConstructObject6) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *GConstructObject6) GetNumber() *wrapperspb.Int32Value {
	if x != nil {
		return x.Number
	}
	return nil
}

type GListOfConstructObject6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GConstructObject6 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfConstructObject6) Reset() {
	*x = GListOfConstructObject6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfConstructObject6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfConstructObject6) ProtoMessage() {}

func (x *GListOfConstructObject6) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfConstructObject6.ProtoReflect.Descriptor instead.
func (*GListOfConstructObject6) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{19}
}

func (x *GListOfConstructObject6) GetItems() []*GConstructObject6 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GConstructObject7 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	Name   string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GConstructObject7) Reset() {
	*x = GConstructObject7{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GConstructObject7) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GConstructObject7) ProtoMessage() {}

func (x *GConstructObject7) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GConstructObject7.ProtoReflect.Descriptor instead.
func (*GConstructObject7) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{20}
}

func (x *GConstructObject7) GetNumber() *wrapperspb.Int32Value {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *GConstructObject7) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GListOfConstructObject7 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GConstructObject7 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfConstructObject7) Reset() {
	*x = GListOfConstructObject7{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfConstructObject7) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfConstructObject7) ProtoMessage() {}

func (x *GListOfConstructObject7) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfConstructObject7.ProtoReflect.Descriptor instead.
func (*GListOfConstructObject7) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{21}
}

func (x *GListOfConstructObject7) GetItems() []*GConstructObject7 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GConstructObject8 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	Name   string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GConstructObject8) Reset() {
	*x = GConstructObject8{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GConstructObject8) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GConstructObject8) ProtoMessage() {}

func (x *GConstructObject8) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GConstructObject8.ProtoReflect.Descriptor instead.
func (*GConstructObject8) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{22}
}

func (x *GConstructObject8) GetNumber() *wrapperspb.Int32Value {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *GConstructObject8) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GListOfConstructObject8 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GConstructObject8 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfConstructObject8) Reset() {
	*x = GListOfConstructObject8{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfConstructObject8) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfConstructObject8) ProtoMessage() {}

func (x *GListOfConstructObject8) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfConstructObject8.ProtoReflect.Descriptor instead.
func (*GListOfConstructObject8) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{23}
}

func (x *GListOfConstructObject8) GetItems() []*GConstructObject8 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GEmpty) Reset() {
	*x = GEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GEmpty) ProtoMessage() {}

func (x *GEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GEmpty.ProtoReflect.Descriptor instead.
func (*GEmpty) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{24}
}

type GListOfEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GEmpty `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfEmpty) Reset() {
	*x = GListOfEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfEmpty) ProtoMessage() {}

func (x *GListOfEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfEmpty.ProtoReflect.Descriptor instead.
func (*GListOfEmpty) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{25}
}

func (x *GListOfEmpty) GetItems() []*GEmpty {
	if x != nil {
		return x.Items
	}
	return nil
}

type GEncapsulatedFieldsClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinalString        string `protobuf:"bytes,1,opt,name=final_string,json=finalString,proto3" json:"final_string,omitempty"`
	EncapsulatedString string `protobuf:"bytes,2,opt,name=encapsulated_string,json=encapsulatedString,proto3" json:"encapsulated_string,omitempty"`
}

func (x *GEncapsulatedFieldsClass) Reset() {
	*x = GEncapsulatedFieldsClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GEncapsulatedFieldsClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GEncapsulatedFieldsClass) ProtoMessage() {}

func (x *GEncapsulatedFieldsClass) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GEncapsulatedFieldsClass.ProtoReflect.Descriptor instead.
func (*GEncapsulatedFieldsClass) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{26}
}

func (x *GEncapsulatedFieldsClass) GetFinalString() string {
	if x != nil {
		return x.FinalString
	}
	return ""
}

func (x *GEncapsulatedFieldsClass) GetEncapsulatedString() string {
	if x != nil {
		return x.EncapsulatedString
	}
	return ""
}

type GListOfEncapsulatedFieldsClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GEncapsulatedFieldsClass `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfEncapsulatedFieldsClass) Reset() {
	*x = GListOfEncapsulatedFieldsClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfEncapsulatedFieldsClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfEncapsulatedFieldsClass) ProtoMessage() {}

func (x *GListOfEncapsulatedFieldsClass) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfEncapsulatedFieldsClass.ProtoReflect.Descriptor instead.
func (*GListOfEncapsulatedFieldsClass) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{27}
}

func (x *GListOfEncapsulatedFieldsClass) GetItems() []*GEncapsulatedFieldsClass {
	if x != nil {
		return x.Items
	}
	return nil
}

type GIngredient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description          string               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Quantity             []byte               `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Precision            float64              `protobuf:"fixed64,4,opt,name=precision,proto3" json:"precision,omitempty"`
	CookingDuration      *durationpb.Duration `protobuf:"bytes,5,opt,name=cooking_duration,json=cookingDuration,proto3" json:"cooking_duration,omitempty"`
	MainComponent        *GComponent          `protobuf:"bytes,6,opt,name=main_component,json=mainComponent,proto3" json:"main_component,omitempty"`
	OtherComponents      []*GComponent        `protobuf:"bytes,7,rep,name=other_components,json=otherComponents,proto3" json:"other_components,omitempty"`
	AlternativeComponent *GComponent          `protobuf:"bytes,8,opt,name=alternative_component,json=alternativeComponent,proto3" json:"alternative_component,omitempty"`
	SecondaryComponents  []*GComponent        `protobuf:"bytes,9,rep,name=secondary_components,json=secondaryComponents,proto3" json:"secondary_components,omitempty"`
}

func (x *GIngredient) Reset() {
	*x = GIngredient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GIngredient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GIngredient) ProtoMessage() {}

func (x *GIngredient) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GIngredient.ProtoReflect.Descriptor instead.
func (*GIngredient) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{28}
}

func (x *GIngredient) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GIngredient) GetQuantity() []byte {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *GIngredient) GetPrecision() float64 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *GIngredient) GetCookingDuration() *durationpb.Duration {
	if x != nil {
		return x.CookingDuration
	}
	return nil
}

func (x *GIngredient) GetMainComponent() *GComponent {
	if x != nil {
		return x.MainComponent
	}
	return nil
}

func (x *GIngredient) GetOtherComponents() []*GComponent {
	if x != nil {
		return x.OtherComponents
	}
	return nil
}

func (x *GIngredient) GetAlternativeComponent() *GComponent {
	if x != nil {
		return x.AlternativeComponent
	}
	return nil
}

func (x *GIngredient) GetSecondaryComponents() []*GComponent {
	if x != nil {
		return x.SecondaryComponents
	}
	return nil
}

type GListOfIngredient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GIngredient `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfIngredient) Reset() {
	*x = GListOfIngredient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfIngredient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfIngredient) ProtoMessage() {}

func (x *GListOfIngredient) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfIngredient.ProtoReflect.Descriptor instead.
func (*GListOfIngredient) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{29}
}

func (x *GListOfIngredient) GetItems() []*GIngredient {
	if x != nil {
		return x.Items
	}
	return nil
}

type GKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GKey) Reset() {
	*x = GKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GKey) ProtoMessage() {}

func (x *GKey) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GKey.ProtoReflect.Descriptor instead.
func (*GKey) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{30}
}

func (x *GKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GListOfKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GKey `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfKey) Reset() {
	*x = GListOfKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfKey) ProtoMessage() {}

func (x *GListOfKey) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfKey.ProtoReflect.Descriptor instead.
func (*GListOfKey) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{31}
}

func (x *GListOfKey) GetItems() []*GKey {
	if x != nil {
		return x.Items
	}
	return nil
}

type GListsHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vbools           []bool                   `protobuf:"varint,2,rep,packed,name=vbools,proto3" json:"vbools,omitempty"`
	Nvbools          []bool                   `protobuf:"varint,3,rep,packed,name=nvbools,proto3" json:"nvbools,omitempty"`
	Vstrings         []string                 `protobuf:"bytes,4,rep,name=vstrings,proto3" json:"vstrings,omitempty"`
	Nvstrings        []string                 `protobuf:"bytes,5,rep,name=nvstrings,proto3" json:"nvstrings,omitempty"`
	Vdurations       []*durationpb.Duration   `protobuf:"bytes,6,rep,name=vdurations,proto3" json:"vdurations,omitempty"`
	Nvdurations      []*durationpb.Duration   `protobuf:"bytes,7,rep,name=nvdurations,proto3" json:"nvdurations,omitempty"`
	Vdatetimes       []*timestamppb.Timestamp `protobuf:"bytes,8,rep,name=vdatetimes,proto3" json:"vdatetimes,omitempty"`
	Nvdatetimes      []*timestamppb.Timestamp `protobuf:"bytes,9,rep,name=nvdatetimes,proto3" json:"nvdatetimes,omitempty"`
	Vdecimals        [][]byte                 `protobuf:"bytes,10,rep,name=vdecimals,proto3" json:"vdecimals,omitempty"`
	Nvdecimals       [][]byte                 `protobuf:"bytes,11,rep,name=nvdecimals,proto3" json:"nvdecimals,omitempty"`
	Vints            []int32                  `protobuf:"varint,12,rep,packed,name=vints,proto3" json:"vints,omitempty"`
	Nvints           []int32                  `protobuf:"varint,13,rep,packed,name=nvints,proto3" json:"nvints,omitempty"`
	Vdoubles         []float64                `protobuf:"fixed64,14,rep,packed,name=vdoubles,proto3" json:"vdoubles,omitempty"`
	Nvdoubles        []float64                `protobuf:"fixed64,15,rep,packed,name=nvdoubles,proto3" json:"nvdoubles,omitempty"`
	VapplianceTypes  []GApplianceType         `protobuf:"varint,16,rep,packed,name=vappliance_types,json=vapplianceTypes,proto3,enum=com.company.project.GApplianceType" json:"vappliance_types,omitempty"`
	NvapplianceTypes []GApplianceType         `protobuf:"varint,17,rep,packed,name=nvappliance_types,json=nvapplianceTypes,proto3,enum=com.company.project.GApplianceType" json:"nvappliance_types,omitempty"`
}

func (x *GListsHost) Reset() {
	*x = GListsHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListsHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListsHost) ProtoMessage() {}

func (x *GListsHost) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListsHost.ProtoReflect.Descriptor instead.
func (*GListsHost) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{32}
}

func (x *GListsHost) GetVbools() []bool {
	if x != nil {
		return x.Vbools
	}
	return nil
}

func (x *GListsHost) GetNvbools() []bool {
	if x != nil {
		return x.Nvbools
	}
	return nil
}

func (x *GListsHost) GetVstrings() []string {
	if x != nil {
		return x.Vstrings
	}
	return nil
}

func (x *GListsHost) GetNvstrings() []string {
	if x != nil {
		return x.Nvstrings
	}
	return nil
}

func (x *GListsHost) GetVdurations() []*durationpb.Duration {
	if x != nil {
		return x.Vdurations
	}
	return nil
}

func (x *GListsHost) GetNvdurations() []*durationpb.Duration {
	if x != nil {
		return x.Nvdurations
	}
	return nil
}

func (x *GListsHost) GetVdatetimes() []*timestamppb.Timestamp {
	if x != nil {
		return x.Vdatetimes
	}
	return nil
}

func (x *GListsHost) GetNvdatetimes() []*timestamppb.Timestamp {
	if x != nil {
		return x.Nvdatetimes
	}
	return nil
}

func (x *GListsHost) GetVdecimals() [][]byte {
	if x != nil {
		return x.Vdecimals
	}
	return nil
}

func (x *GListsHost) GetNvdecimals() [][]byte {
	if x != nil {
		return x.Nvdecimals
	}
	return nil
}

func (x *GListsHost) GetVints() []int32 {
	if x != nil {
		return x.Vints
	}
	return nil
}

func (x *GListsHost) GetNvints() []int32 {
	if x != nil {
		return x.Nvints
	}
	return nil
}

func (x *GListsHost) GetVdoubles() []float64 {
	if x != nil {
		return x.Vdoubles
	}
	return nil
}

func (x *GListsHost) GetNvdoubles() []float64 {
	if x != nil {
		return x.Nvdoubles
	}
	return nil
}

func (x *GListsHost) GetVapplianceTypes() []GApplianceType {
	if x != nil {
		return x.VapplianceTypes
	}
	return nil
}

func (x *GListsHost) GetNvapplianceTypes() []GApplianceType {
	if x != nil {
		return x.NvapplianceTypes
	}
	return nil
}

type GListOfListsHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GListsHost `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfListsHost) Reset() {
	*x = GListOfListsHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfListsHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfListsHost) ProtoMessage() {}

func (x *GListOfListsHost) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfListsHost.ProtoReflect.Descriptor instead.
func (*GListOfListsHost) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{33}
}

func (x *GListOfListsHost) GetItems() []*GListsHost {
	if x != nil {
		return x.Items
	}
	return nil
}

type GAirplane struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldsOfSuperClass *GFieldsOfAircraft `protobuf:"bytes,1,opt,name=fieldsOfSuperClass,proto3" json:"fieldsOfSuperClass,omitempty"`
	Wingspan           int32              `protobuf:"varint,2,opt,name=wingspan,proto3" json:"wingspan,omitempty"`
}

func (x *GAirplane) Reset() {
	*x = GAirplane{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GAirplane) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GAirplane) ProtoMessage() {}

func (x *GAirplane) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GAirplane.ProtoReflect.Descriptor instead.
func (*GAirplane) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{34}
}

func (x *GAirplane) GetFieldsOfSuperClass() *GFieldsOfAircraft {
	if x != nil {
		return x.FieldsOfSuperClass
	}
	return nil
}

func (x *GAirplane) GetWingspan() int32 {
	if x != nil {
		return x.Wingspan
	}
	return 0
}

type GListOfAirplane struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GAirplane `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfAirplane) Reset() {
	*x = GListOfAirplane{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfAirplane) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfAirplane) ProtoMessage() {}

func (x *GListOfAirplane) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfAirplane.ProtoReflect.Descriptor instead.
func (*GListOfAirplane) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{35}
}

func (x *GListOfAirplane) GetItems() []*GAirplane {
	if x != nil {
		return x.Items
	}
	return nil
}

type GBalloon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weight         int32  `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Key            string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	ServiceCeiling int32  `protobuf:"varint,4,opt,name=service_ceiling,json=serviceCeiling,proto3" json:"service_ceiling,omitempty"`
}

func (x *GBalloon) Reset() {
	*x = GBalloon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBalloon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBalloon) ProtoMessage() {}

func (x *GBalloon) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBalloon.ProtoReflect.Descriptor instead.
func (*GBalloon) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{36}
}

func (x *GBalloon) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *GBalloon) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GBalloon) GetServiceCeiling() int32 {
	if x != nil {
		return x.ServiceCeiling
	}
	return 0
}

type GListOfBalloon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GBalloon `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfBalloon) Reset() {
	*x = GListOfBalloon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfBalloon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfBalloon) ProtoMessage() {}

func (x *GListOfBalloon) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfBalloon.ProtoReflect.Descriptor instead.
func (*GListOfBalloon) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{37}
}

func (x *GListOfBalloon) GetItems() []*GBalloon {
	if x != nil {
		return x.Items
	}
	return nil
}

type GBicycle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldsOfSuperClass *GFieldsOfAbstractVehicle `protobuf:"bytes,1,opt,name=fieldsOfSuperClass,proto3" json:"fieldsOfSuperClass,omitempty"`
	WheelDiamater      []byte                    `protobuf:"bytes,2,opt,name=wheel_diamater,json=wheelDiamater,proto3" json:"wheel_diamater,omitempty"`
	Key                string                    `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GBicycle) Reset() {
	*x = GBicycle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBicycle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBicycle) ProtoMessage() {}

func (x *GBicycle) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBicycle.ProtoReflect.Descriptor instead.
func (*GBicycle) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{38}
}

func (x *GBicycle) GetFieldsOfSuperClass() *GFieldsOfAbstractVehicle {
	if x != nil {
		return x.FieldsOfSuperClass
	}
	return nil
}

func (x *GBicycle) GetWheelDiamater() []byte {
	if x != nil {
		return x.WheelDiamater
	}
	return nil
}

func (x *GBicycle) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GListOfBicycle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GBicycle `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfBicycle) Reset() {
	*x = GListOfBicycle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfBicycle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfBicycle) ProtoMessage() {}

func (x *GListOfBicycle) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfBicycle.ProtoReflect.Descriptor instead.
func (*GListOfBicycle) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{39}
}

func (x *GListOfBicycle) GetItems() []*GBicycle {
	if x != nil {
		return x.Items
	}
	return nil
}

type GCar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldsOfSuperClass *GFieldsOfVehicle `protobuf:"bytes,1,opt,name=fieldsOfSuperClass,proto3" json:"fieldsOfSuperClass,omitempty"`
	NumberOfDoors      int32             `protobuf:"varint,2,opt,name=number_of_doors,json=numberOfDoors,proto3" json:"number_of_doors,omitempty"`
}

func (x *GCar) Reset() {
	*x = GCar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCar) ProtoMessage() {}

func (x *GCar) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCar.ProtoReflect.Descriptor instead.
func (*GCar) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{40}
}

func (x *GCar) GetFieldsOfSuperClass() *GFieldsOfVehicle {
	if x != nil {
		return x.FieldsOfSuperClass
	}
	return nil
}

func (x *GCar) GetNumberOfDoors() int32 {
	if x != nil {
		return x.NumberOfDoors
	}
	return 0
}

type GListOfCar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GCar `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfCar) Reset() {
	*x = GListOfCar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfCar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfCar) ProtoMessage() {}

func (x *GListOfCar) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfCar.ProtoReflect.Descriptor instead.
func (*GListOfCar) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{41}
}

func (x *GListOfCar) GetItems() []*GCar {
	if x != nil {
		return x.Items
	}
	return nil
}

type GEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GEntity) Reset() {
	*x = GEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GEntity) ProtoMessage() {}

func (x *GEntity) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GEntity.ProtoReflect.Descriptor instead.
func (*GEntity) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{42}
}

func (x *GEntity) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GListOfEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GEntity `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfEntity) Reset() {
	*x = GListOfEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfEntity) ProtoMessage() {}

func (x *GListOfEntity) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfEntity.ProtoReflect.Descriptor instead.
func (*GListOfEntity) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{43}
}

func (x *GListOfEntity) GetItems() []*GEntity {
	if x != nil {
		return x.Items
	}
	return nil
}

type GGyrocopter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldsOfSuperClass *GFieldsOfRotorcraft `protobuf:"bytes,1,opt,name=fieldsOfSuperClass,proto3" json:"fieldsOfSuperClass,omitempty"`
}

func (x *GGyrocopter) Reset() {
	*x = GGyrocopter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GGyrocopter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GGyrocopter) ProtoMessage() {}

func (x *GGyrocopter) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GGyrocopter.ProtoReflect.Descriptor instead.
func (*GGyrocopter) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{44}
}

func (x *GGyrocopter) GetFieldsOfSuperClass() *GFieldsOfRotorcraft {
	if x != nil {
		return x.FieldsOfSuperClass
	}
	return nil
}

type GListOfGyrocopter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GGyrocopter `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfGyrocopter) Reset() {
	*x = GListOfGyrocopter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfGyrocopter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfGyrocopter) ProtoMessage() {}

func (x *GListOfGyrocopter) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfGyrocopter.ProtoReflect.Descriptor instead.
func (*GListOfGyrocopter) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{45}
}

func (x *GListOfGyrocopter) GetItems() []*GGyrocopter {
	if x != nil {
		return x.Items
	}
	return nil
}

type GHelicopter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldsOfSuperClass *GFieldsOfRotorcraft `protobuf:"bytes,1,opt,name=fieldsOfSuperClass,proto3" json:"fieldsOfSuperClass,omitempty"`
}

func (x *GHelicopter) Reset() {
	*x = GHelicopter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GHelicopter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GHelicopter) ProtoMessage() {}

func (x *GHelicopter) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GHelicopter.ProtoReflect.Descriptor instead.
func (*GHelicopter) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{46}
}

func (x *GHelicopter) GetFieldsOfSuperClass() *GFieldsOfRotorcraft {
	if x != nil {
		return x.FieldsOfSuperClass
	}
	return nil
}

type GListOfHelicopter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GHelicopter `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfHelicopter) Reset() {
	*x = GListOfHelicopter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfHelicopter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfHelicopter) ProtoMessage() {}

func (x *GListOfHelicopter) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfHelicopter.ProtoReflect.Descriptor instead.
func (*GListOfHelicopter) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{47}
}

func (x *GListOfHelicopter) GetItems() []*GHelicopter {
	if x != nil {
		return x.Items
	}
	return nil
}

type GScooter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldsOfSuperClass *GFieldsOfAbstractVehicle `protobuf:"bytes,1,opt,name=fieldsOfSuperClass,proto3" json:"fieldsOfSuperClass,omitempty"`
	Key                string                    `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GScooter) Reset() {
	*x = GScooter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GScooter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GScooter) ProtoMessage() {}

func (x *GScooter) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GScooter.ProtoReflect.Descriptor instead.
func (*GScooter) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{48}
}

func (x *GScooter) GetFieldsOfSuperClass() *GFieldsOfAbstractVehicle {
	if x != nil {
		return x.FieldsOfSuperClass
	}
	return nil
}

func (x *GScooter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GListOfScooter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GScooter `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfScooter) Reset() {
	*x = GListOfScooter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfScooter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfScooter) ProtoMessage() {}

func (x *GListOfScooter) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfScooter.ProtoReflect.Descriptor instead.
func (*GListOfScooter) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{49}
}

func (x *GListOfScooter) GetItems() []*GScooter {
	if x != nil {
		return x.Items
	}
	return nil
}

type GFieldsOfAbstractVehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weight int32 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *GFieldsOfAbstractVehicle) Reset() {
	*x = GFieldsOfAbstractVehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GFieldsOfAbstractVehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GFieldsOfAbstractVehicle) ProtoMessage() {}

func (x *GFieldsOfAbstractVehicle) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GFieldsOfAbstractVehicle.ProtoReflect.Descriptor instead.
func (*GFieldsOfAbstractVehicle) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{50}
}

func (x *GFieldsOfAbstractVehicle) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type GAbstractVehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Props:
	//
	//	*GAbstractVehicle_AbstractVehicle
	//	*GAbstractVehicle_Bicycle
	//	*GAbstractVehicle_Scooter
	Props isGAbstractVehicle_Props `protobuf_oneof:"props"`
}

func (x *GAbstractVehicle) Reset() {
	*x = GAbstractVehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GAbstractVehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GAbstractVehicle) ProtoMessage() {}

func (x *GAbstractVehicle) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GAbstractVehicle.ProtoReflect.Descriptor instead.
func (*GAbstractVehicle) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{51}
}

func (m *GAbstractVehicle) GetProps() isGAbstractVehicle_Props {
	if m != nil {
		return m.Props
	}
	return nil
}

func (x *GAbstractVehicle) GetAbstractVehicle() *GFieldsOfAbstractVehicle {
	if x, ok := x.GetProps().(*GAbstractVehicle_AbstractVehicle); ok {
		return x.AbstractVehicle
	}
	return nil
}

func (x *GAbstractVehicle) GetBicycle() *GBicycle {
	if x, ok := x.GetProps().(*GAbstractVehicle_Bicycle); ok {
		return x.Bicycle
	}
	return nil
}

func (x *GAbstractVehicle) GetScooter() *GScooter {
	if x, ok := x.GetProps().(*GAbstractVehicle_Scooter); ok {
		return x.Scooter
	}
	return nil
}

type isGAbstractVehicle_Props interface {
	isGAbstractVehicle_Props()
}

type GAbstractVehicle_AbstractVehicle struct {
	AbstractVehicle *GFieldsOfAbstractVehicle `protobuf:"bytes,1,opt,name=abstract_vehicle,json=abstractVehicle,proto3,oneof"`
}

type GAbstractVehicle_Bicycle struct {
	Bicycle *GBicycle `protobuf:"bytes,3,opt,name=bicycle,proto3,oneof"`
}

type GAbstractVehicle_Scooter struct {
	Scooter *GScooter `protobuf:"bytes,4,opt,name=scooter,proto3,oneof"`
}

func (*GAbstractVehicle_AbstractVehicle) isGAbstractVehicle_Props() {}

func (*GAbstractVehicle_Bicycle) isGAbstractVehicle_Props() {}

func (*GAbstractVehicle_Scooter) isGAbstractVehicle_Props() {}

type GListOfAbstractVehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GAbstractVehicle `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfAbstractVehicle) Reset() {
	*x = GListOfAbstractVehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfAbstractVehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfAbstractVehicle) ProtoMessage() {}

func (x *GListOfAbstractVehicle) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfAbstractVehicle.ProtoReflect.Descriptor instead.
func (*GListOfAbstractVehicle) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{52}
}

func (x *GListOfAbstractVehicle) GetItems() []*GAbstractVehicle {
	if x != nil {
		return x.Items
	}
	return nil
}

type GFieldsOfAircraft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldsOfSuperClass *GFieldsOfVehicle `protobuf:"bytes,6,opt,name=fieldsOfSuperClass,proto3" json:"fieldsOfSuperClass,omitempty"`
	ServiceCeiling     int32             `protobuf:"varint,3,opt,name=service_ceiling,json=serviceCeiling,proto3" json:"service_ceiling,omitempty"`
	Key                string            `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GFieldsOfAircraft) Reset() {
	*x = GFieldsOfAircraft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GFieldsOfAircraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GFieldsOfAircraft) ProtoMessage() {}

func (x *GFieldsOfAircraft) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GFieldsOfAircraft.ProtoReflect.Descriptor instead.
func (*GFieldsOfAircraft) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{53}
}

func (x *GFieldsOfAircraft) GetFieldsOfSuperClass() *GFieldsOfVehicle {
	if x != nil {
		return x.FieldsOfSuperClass
	}
	return nil
}

func (x *GFieldsOfAircraft) GetServiceCeiling() int32 {
	if x != nil {
		return x.ServiceCeiling
	}
	return 0
}

func (x *GFieldsOfAircraft) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GAircraft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Props:
	//
	//	*GAircraft_Aircraft
	//	*GAircraft_Airplane
	//	*GAircraft_Rotorcraft
	//	*GAircraft_Balloon
	Props isGAircraft_Props `protobuf_oneof:"props"`
}

func (x *GAircraft) Reset() {
	*x = GAircraft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GAircraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GAircraft) ProtoMessage() {}

func (x *GAircraft) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GAircraft.ProtoReflect.Descriptor instead.
func (*GAircraft) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{54}
}

func (m *GAircraft) GetProps() isGAircraft_Props {
	if m != nil {
		return m.Props
	}
	return nil
}

func (x *GAircraft) GetAircraft() *GFieldsOfAircraft {
	if x, ok := x.GetProps().(*GAircraft_Aircraft); ok {
		return x.Aircraft
	}
	return nil
}

func (x *GAircraft) GetAirplane() *GAirplane {
	if x, ok := x.GetProps().(*GAircraft_Airplane); ok {
		return x.Airplane
	}
	return nil
}

func (x *GAircraft) GetRotorcraft() *GRotorcraft {
	if x, ok := x.GetProps().(*GAircraft_Rotorcraft); ok {
		return x.Rotorcraft
	}
	return nil
}

func (x *GAircraft) GetBalloon() *GBalloon {
	if x, ok := x.GetProps().(*GAircraft_Balloon); ok {
		return x.Balloon
	}
	return nil
}

type isGAircraft_Props interface {
	isGAircraft_Props()
}

type GAircraft_Aircraft struct {
	Aircraft *GFieldsOfAircraft `protobuf:"bytes,1,opt,name=aircraft,proto3,oneof"`
}

type GAircraft_Airplane struct {
	Airplane *GAirplane `protobuf:"bytes,3,opt,name=airplane,proto3,oneof"`
}

type GAircraft_Rotorcraft struct {
	Rotorcraft *GRotorcraft `protobuf:"bytes,4,opt,name=rotorcraft,proto3,oneof"`
}

type GAircraft_Balloon struct {
	Balloon *GBalloon `protobuf:"bytes,5,opt,name=balloon,proto3,oneof"`
}

func (*GAircraft_Aircraft) isGAircraft_Props() {}

func (*GAircraft_Airplane) isGAircraft_Props() {}

func (*GAircraft_Rotorcraft) isGAircraft_Props() {}

func (*GAircraft_Balloon) isGAircraft_Props() {}

type GListOfAircraft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GAircraft `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfAircraft) Reset() {
	*x = GListOfAircraft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfAircraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfAircraft) ProtoMessage() {}

func (x *GListOfAircraft) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfAircraft.ProtoReflect.Descriptor instead.
func (*GListOfAircraft) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{55}
}

func (x *GListOfAircraft) GetItems() []*GAircraft {
	if x != nil {
		return x.Items
	}
	return nil
}

type GFieldsOfRotorcraft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldsOfSuperClass *GFieldsOfAircraft `protobuf:"bytes,1,opt,name=fieldsOfSuperClass,proto3" json:"fieldsOfSuperClass,omitempty"`
}

func (x *GFieldsOfRotorcraft) Reset() {
	*x = GFieldsOfRotorcraft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GFieldsOfRotorcraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GFieldsOfRotorcraft) ProtoMessage() {}

func (x *GFieldsOfRotorcraft) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GFieldsOfRotorcraft.ProtoReflect.Descriptor instead.
func (*GFieldsOfRotorcraft) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{56}
}

func (x *GFieldsOfRotorcraft) GetFieldsOfSuperClass() *GFieldsOfAircraft {
	if x != nil {
		return x.FieldsOfSuperClass
	}
	return nil
}

type GRotorcraft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Props:
	//
	//	*GRotorcraft_Rotorcraft
	//	*GRotorcraft_Helicopter
	//	*GRotorcraft_Gyrocopter
	Props isGRotorcraft_Props `protobuf_oneof:"props"`
}

func (x *GRotorcraft) Reset() {
	*x = GRotorcraft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GRotorcraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GRotorcraft) ProtoMessage() {}

func (x *GRotorcraft) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GRotorcraft.ProtoReflect.Descriptor instead.
func (*GRotorcraft) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{57}
}

func (m *GRotorcraft) GetProps() isGRotorcraft_Props {
	if m != nil {
		return m.Props
	}
	return nil
}

func (x *GRotorcraft) GetRotorcraft() *GFieldsOfRotorcraft {
	if x, ok := x.GetProps().(*GRotorcraft_Rotorcraft); ok {
		return x.Rotorcraft
	}
	return nil
}

func (x *GRotorcraft) GetHelicopter() *GHelicopter {
	if x, ok := x.GetProps().(*GRotorcraft_Helicopter); ok {
		return x.Helicopter
	}
	return nil
}

func (x *GRotorcraft) GetGyrocopter() *GGyrocopter {
	if x, ok := x.GetProps().(*GRotorcraft_Gyrocopter); ok {
		return x.Gyrocopter
	}
	return nil
}

type isGRotorcraft_Props interface {
	isGRotorcraft_Props()
}

type GRotorcraft_Rotorcraft struct {
	Rotorcraft *GFieldsOfRotorcraft `protobuf:"bytes,1,opt,name=rotorcraft,proto3,oneof"`
}

type GRotorcraft_Helicopter struct {
	Helicopter *GHelicopter `protobuf:"bytes,3,opt,name=helicopter,proto3,oneof"`
}

type GRotorcraft_Gyrocopter struct {
	Gyrocopter *GGyrocopter `protobuf:"bytes,4,opt,name=gyrocopter,proto3,oneof"`
}

func (*GRotorcraft_Rotorcraft) isGRotorcraft_Props() {}

func (*GRotorcraft_Helicopter) isGRotorcraft_Props() {}

func (*GRotorcraft_Gyrocopter) isGRotorcraft_Props() {}

type GListOfRotorcraft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GRotorcraft `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfRotorcraft) Reset() {
	*x = GListOfRotorcraft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfRotorcraft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfRotorcraft) ProtoMessage() {}

func (x *GListOfRotorcraft) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfRotorcraft.ProtoReflect.Descriptor instead.
func (*GListOfRotorcraft) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{58}
}

func (x *GListOfRotorcraft) GetItems() []*GRotorcraft {
	if x != nil {
		return x.Items
	}
	return nil
}

type GFieldsOfVehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weight int32 `protobuf:"varint,5,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *GFieldsOfVehicle) Reset() {
	*x = GFieldsOfVehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GFieldsOfVehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GFieldsOfVehicle) ProtoMessage() {}

func (x *GFieldsOfVehicle) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GFieldsOfVehicle.ProtoReflect.Descriptor instead.
func (*GFieldsOfVehicle) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{59}
}

func (x *GFieldsOfVehicle) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type GVehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Props:
	//
	//	*GVehicle_Vehicle
	//	*GVehicle_Aircraft
	//	*GVehicle_Car
	Props isGVehicle_Props `protobuf_oneof:"props"`
}

func (x *GVehicle) Reset() {
	*x = GVehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GVehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GVehicle) ProtoMessage() {}

func (x *GVehicle) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GVehicle.ProtoReflect.Descriptor instead.
func (*GVehicle) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{60}
}

func (m *GVehicle) GetProps() isGVehicle_Props {
	if m != nil {
		return m.Props
	}
	return nil
}

func (x *GVehicle) GetVehicle() *GFieldsOfVehicle {
	if x, ok := x.GetProps().(*GVehicle_Vehicle); ok {
		return x.Vehicle
	}
	return nil
}

func (x *GVehicle) GetAircraft() *GAircraft {
	if x, ok := x.GetProps().(*GVehicle_Aircraft); ok {
		return x.Aircraft
	}
	return nil
}

func (x *GVehicle) GetCar() *GCar {
	if x, ok := x.GetProps().(*GVehicle_Car); ok {
		return x.Car
	}
	return nil
}

type isGVehicle_Props interface {
	isGVehicle_Props()
}

type GVehicle_Vehicle struct {
	Vehicle *GFieldsOfVehicle `protobuf:"bytes,1,opt,name=vehicle,proto3,oneof"`
}

type GVehicle_Aircraft struct {
	Aircraft *GAircraft `protobuf:"bytes,3,opt,name=aircraft,proto3,oneof"`
}

type GVehicle_Car struct {
	Car *GCar `protobuf:"bytes,4,opt,name=car,proto3,oneof"`
}

func (*GVehicle_Vehicle) isGVehicle_Props() {}

func (*GVehicle_Aircraft) isGVehicle_Props() {}

func (*GVehicle_Car) isGVehicle_Props() {}

type GListOfVehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GVehicle `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfVehicle) Reset() {
	*x = GListOfVehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfVehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfVehicle) ProtoMessage() {}

func (x *GListOfVehicle) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfVehicle.ProtoReflect.Descriptor instead.
func (*GListOfVehicle) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{61}
}

func (x *GListOfVehicle) GetItems() []*GVehicle {
	if x != nil {
		return x.Items
	}
	return nil
}

type GKnife struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type GKnifeType `protobuf:"varint,2,opt,name=type,proto3,enum=com.company.project.GKnifeType" json:"type,omitempty"`
}

func (x *GKnife) Reset() {
	*x = GKnife{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GKnife) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GKnife) ProtoMessage() {}

func (x *GKnife) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GKnife.ProtoReflect.Descriptor instead.
func (*GKnife) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{62}
}

func (x *GKnife) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GKnife) GetType() GKnifeType {
	if x != nil {
		return x.Type
	}
	return GKnifeType_G_KNIFE_TYPE_CHEFS_KNIFE
}

type GListOfKnife struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GKnife `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfKnife) Reset() {
	*x = GListOfKnife{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfKnife) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfKnife) ProtoMessage() {}

func (x *GListOfKnife) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfKnife.ProtoReflect.Descriptor instead.
func (*GListOfKnife) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{63}
}

func (x *GListOfKnife) GetItems() []*GKnife {
	if x != nil {
		return x.Items
	}
	return nil
}

type GGarlicPress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MachineWashable bool   `protobuf:"varint,3,opt,name=machine_washable,json=machineWashable,proto3" json:"machine_washable,omitempty"`
}

func (x *GGarlicPress) Reset() {
	*x = GGarlicPress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GGarlicPress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GGarlicPress) ProtoMessage() {}

func (x *GGarlicPress) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GGarlicPress.ProtoReflect.Descriptor instead.
func (*GGarlicPress) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{64}
}

func (x *GGarlicPress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GGarlicPress) GetMachineWashable() bool {
	if x != nil {
		return x.MachineWashable
	}
	return false
}

type GListOfGarlicPress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GGarlicPress `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfGarlicPress) Reset() {
	*x = GListOfGarlicPress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfGarlicPress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfGarlicPress) ProtoMessage() {}

func (x *GListOfGarlicPress) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfGarlicPress.ProtoReflect.Descriptor instead.
func (*GListOfGarlicPress) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{65}
}

func (x *GListOfGarlicPress) GetItems() []*GGarlicPress {
	if x != nil {
		return x.Items
	}
	return nil
}

type GKitchen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecipeList         []*GRecipe             `protobuf:"bytes,2,rep,name=recipe_list,json=recipeList,proto3" json:"recipe_list,omitempty"`
	RecipeMap          map[string]*GRecipe    `protobuf:"bytes,3,rep,name=recipe_map,json=recipeMap,proto3" json:"recipe_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NextInspectionDate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=next_inspection_date,json=nextInspectionDate,proto3" json:"next_inspection_date,omitempty"`
}

func (x *GKitchen) Reset() {
	*x = GKitchen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GKitchen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GKitchen) ProtoMessage() {}

func (x *GKitchen) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GKitchen.ProtoReflect.Descriptor instead.
func (*GKitchen) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{66}
}

func (x *GKitchen) GetRecipeList() []*GRecipe {
	if x != nil {
		return x.RecipeList
	}
	return nil
}

func (x *GKitchen) GetRecipeMap() map[string]*GRecipe {
	if x != nil {
		return x.RecipeMap
	}
	return nil
}

func (x *GKitchen) GetNextInspectionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.NextInspectionDate
	}
	return nil
}

type GListOfKitchen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GKitchen `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfKitchen) Reset() {
	*x = GListOfKitchen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfKitchen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfKitchen) ProtoMessage() {}

func (x *GListOfKitchen) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfKitchen.ProtoReflect.Descriptor instead.
func (*GListOfKitchen) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{67}
}

func (x *GListOfKitchen) GetItems() []*GKitchen {
	if x != nil {
		return x.Items
	}
	return nil
}

type GChef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FavoriteRecipe        *GRecipe               `protobuf:"bytes,2,opt,name=favorite_recipe,json=favoriteRecipe,proto3" json:"favorite_recipe,omitempty"`
	FavoriteKnife         *GKnife                `protobuf:"bytes,3,opt,name=favorite_knife,json=favoriteKnife,proto3" json:"favorite_knife,omitempty"`
	FavoriteApplianceType GApplianceType         `protobuf:"varint,4,opt,name=favorite_appliance_type,json=favoriteApplianceType,proto3,enum=com.company.project.GApplianceType" json:"favorite_appliance_type,omitempty"`
	FavoriteWords         []string               `protobuf:"bytes,5,rep,name=favorite_words,json=favoriteWords,proto3" json:"favorite_words,omitempty"`
	Birthdate             *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	ShelfLife             *durationpb.Duration   `protobuf:"bytes,7,opt,name=shelf_life,json=shelfLife,proto3" json:"shelf_life,omitempty"`
}

func (x *GChef) Reset() {
	*x = GChef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GChef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GChef) ProtoMessage() {}

func (x *GChef) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GChef.ProtoReflect.Descriptor instead.
func (*GChef) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{68}
}

func (x *GChef) GetFavoriteRecipe() *GRecipe {
	if x != nil {
		return x.FavoriteRecipe
	}
	return nil
}

func (x *GChef) GetFavoriteKnife() *GKnife {
	if x != nil {
		return x.FavoriteKnife
	}
	return nil
}

func (x *GChef) GetFavoriteApplianceType() GApplianceType {
	if x != nil {
		return x.FavoriteApplianceType
	}
	return GApplianceType_G_APPLIANCE_TYPE_HEAT
}

func (x *GChef) GetFavoriteWords() []string {
	if x != nil {
		return x.FavoriteWords
	}
	return nil
}

func (x *GChef) GetBirthdate() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthdate
	}
	return nil
}

func (x *GChef) GetShelfLife() *durationpb.Duration {
	if x != nil {
		return x.ShelfLife
	}
	return nil
}

type GListOfChef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GChef `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfChef) Reset() {
	*x = GListOfChef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfChef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfChef) ProtoMessage() {}

func (x *GListOfChef) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfChef.ProtoReflect.Descriptor instead.
func (*GListOfChef) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{69}
}

func (x *GListOfChef) GetItems() []*GChef {
	if x != nil {
		return x.Items
	}
	return nil
}

type GSousChef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldsOfSuperClass *GChef `protobuf:"bytes,1,opt,name=fieldsOfSuperClass,proto3" json:"fieldsOfSuperClass,omitempty"`
}

func (x *GSousChef) Reset() {
	*x = GSousChef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GSousChef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GSousChef) ProtoMessage() {}

func (x *GSousChef) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GSousChef.ProtoReflect.Descriptor instead.
func (*GSousChef) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{70}
}

func (x *GSousChef) GetFieldsOfSuperClass() *GChef {
	if x != nil {
		return x.FieldsOfSuperClass
	}
	return nil
}

type GListOfSousChef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GSousChef `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfSousChef) Reset() {
	*x = GListOfSousChef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfSousChef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfSousChef) ProtoMessage() {}

func (x *GListOfSousChef) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfSousChef.ProtoReflect.Descriptor instead.
func (*GListOfSousChef) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{71}
}

func (x *GListOfSousChef) GetItems() []*GSousChef {
	if x != nil {
		return x.Items
	}
	return nil
}

type GKnifeMaster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldsOfSuperClass *GChef  `protobuf:"bytes,1,opt,name=fieldsOfSuperClass,proto3" json:"fieldsOfSuperClass,omitempty"`
	FavoriteKnife      *GKnife `protobuf:"bytes,2,opt,name=favorite_knife,json=favoriteKnife,proto3" json:"favorite_knife,omitempty"`
}

func (x *GKnifeMaster) Reset() {
	*x = GKnifeMaster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GKnifeMaster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GKnifeMaster) ProtoMessage() {}

func (x *GKnifeMaster) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GKnifeMaster.ProtoReflect.Descriptor instead.
func (*GKnifeMaster) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{72}
}

func (x *GKnifeMaster) GetFieldsOfSuperClass() *GChef {
	if x != nil {
		return x.FieldsOfSuperClass
	}
	return nil
}

func (x *GKnifeMaster) GetFavoriteKnife() *GKnife {
	if x != nil {
		return x.FavoriteKnife
	}
	return nil
}

type GListOfKnifeMaster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GKnifeMaster `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfKnifeMaster) Reset() {
	*x = GListOfKnifeMaster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfKnifeMaster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfKnifeMaster) ProtoMessage() {}

func (x *GListOfKnifeMaster) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfKnifeMaster.ProtoReflect.Descriptor instead.
func (*GListOfKnifeMaster) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{73}
}

func (x *GListOfKnifeMaster) GetItems() []*GKnifeMaster {
	if x != nil {
		return x.Items
	}
	return nil
}

type GInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberOfThings map[string]int32     `protobuf:"bytes,2,rep,name=number_of_things,json=numberOfThings,proto3" json:"number_of_things,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	RecipesByName  map[string]*GRecipe  `protobuf:"bytes,3,rep,name=recipes_by_name,json=recipesByName,proto3" json:"recipes_by_name,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TimeSpan       *durationpb.Duration `protobuf:"bytes,4,opt,name=time_span,json=timeSpan,proto3" json:"time_span,omitempty"`
}

func (x *GInventory) Reset() {
	*x = GInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GInventory) ProtoMessage() {}

func (x *GInventory) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GInventory.ProtoReflect.Descriptor instead.
func (*GInventory) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{74}
}

func (x *GInventory) GetNumberOfThings() map[string]int32 {
	if x != nil {
		return x.NumberOfThings
	}
	return nil
}

func (x *GInventory) GetRecipesByName() map[string]*GRecipe {
	if x != nil {
		return x.RecipesByName
	}
	return nil
}

func (x *GInventory) GetTimeSpan() *durationpb.Duration {
	if x != nil {
		return x.TimeSpan
	}
	return nil
}

type GListOfInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GInventory `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfInventory) Reset() {
	*x = GListOfInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfInventory) ProtoMessage() {}

func (x *GListOfInventory) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfInventory.ProtoReflect.Descriptor instead.
func (*GListOfInventory) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{75}
}

func (x *GListOfInventory) GetItems() []*GInventory {
	if x != nil {
		return x.Items
	}
	return nil
}

type GPrecisionSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateProperty     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_property,json=dateProperty,proto3" json:"date_property,omitempty"`
	DurationProperty *durationpb.Duration   `protobuf:"bytes,3,opt,name=duration_property,json=durationProperty,proto3" json:"duration_property,omitempty"`
}

func (x *GPrecisionSubject) Reset() {
	*x = GPrecisionSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPrecisionSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPrecisionSubject) ProtoMessage() {}

func (x *GPrecisionSubject) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPrecisionSubject.ProtoReflect.Descriptor instead.
func (*GPrecisionSubject) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{76}
}

func (x *GPrecisionSubject) GetDateProperty() *timestamppb.Timestamp {
	if x != nil {
		return x.DateProperty
	}
	return nil
}

func (x *GPrecisionSubject) GetDurationProperty() *durationpb.Duration {
	if x != nil {
		return x.DurationProperty
	}
	return nil
}

type GListOfPrecisionSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GPrecisionSubject `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfPrecisionSubject) Reset() {
	*x = GListOfPrecisionSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfPrecisionSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfPrecisionSubject) ProtoMessage() {}

func (x *GListOfPrecisionSubject) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfPrecisionSubject.ProtoReflect.Descriptor instead.
func (*GListOfPrecisionSubject) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{77}
}

func (x *GListOfPrecisionSubject) GetItems() []*GPrecisionSubject {
	if x != nil {
		return x.Items
	}
	return nil
}

type GRecipe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title                  string                  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description            *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Category               *GCategory              `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Ingredients            []*GIngredient          `protobuf:"bytes,5,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	PublishDate            *timestamppb.Timestamp  `protobuf:"bytes,6,opt,name=publish_date,json=publishDate,proto3" json:"publish_date,omitempty"`
	ExpiryDate             *timestamppb.Timestamp  `protobuf:"bytes,7,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
	PreparationDuration    *durationpb.Duration    `protobuf:"bytes,8,opt,name=preparation_duration,json=preparationDuration,proto3" json:"preparation_duration,omitempty"`
	TotalDuration          *durationpb.Duration    `protobuf:"bytes,9,opt,name=total_duration,json=totalDuration,proto3" json:"total_duration,omitempty"`
	IsPublished            bool                    `protobuf:"varint,10,opt,name=is_published,json=isPublished,proto3" json:"is_published,omitempty"`
	RequiresRobot          *wrapperspb.BoolValue   `protobuf:"bytes,11,opt,name=requires_robot,json=requiresRobot,proto3" json:"requires_robot,omitempty"`
	GrossWeight            *wrapperspb.DoubleValue `protobuf:"bytes,12,opt,name=gross_weight,json=grossWeight,proto3" json:"gross_weight,omitempty"`
	NetWeight              *wrapperspb.DoubleValue `protobuf:"bytes,13,opt,name=net_weight,json=netWeight,proto3" json:"net_weight,omitempty"`
	MainApplianceType      GApplianceType          `protobuf:"varint,14,opt,name=main_appliance_type,json=mainApplianceType,proto3,enum=com.company.project.GApplianceType" json:"main_appliance_type,omitempty"`
	SecondaryApplianceType *GApplianceType_Message `protobuf:"bytes,15,opt,name=secondary_appliance_type,json=secondaryApplianceType,proto3" json:"secondary_appliance_type,omitempty"`
	Tags                   []string                `protobuf:"bytes,16,rep,name=tags,proto3" json:"tags,omitempty"`
	ExtraTags              []string                `protobuf:"bytes,17,rep,name=extra_tags,json=extraTags,proto3" json:"extra_tags,omitempty"`
}

func (x *GRecipe) Reset() {
	*x = GRecipe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GRecipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GRecipe) ProtoMessage() {}

func (x *GRecipe) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GRecipe.ProtoReflect.Descriptor instead.
func (*GRecipe) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{78}
}

func (x *GRecipe) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GRecipe) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *GRecipe) GetCategory() *GCategory {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *GRecipe) GetIngredients() []*GIngredient {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *GRecipe) GetPublishDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishDate
	}
	return nil
}

func (x *GRecipe) GetExpiryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryDate
	}
	return nil
}

func (x *GRecipe) GetPreparationDuration() *durationpb.Duration {
	if x != nil {
		return x.PreparationDuration
	}
	return nil
}

func (x *GRecipe) GetTotalDuration() *durationpb.Duration {
	if x != nil {
		return x.TotalDuration
	}
	return nil
}

func (x *GRecipe) GetIsPublished() bool {
	if x != nil {
		return x.IsPublished
	}
	return false
}

func (x *GRecipe) GetRequiresRobot() *wrapperspb.BoolValue {
	if x != nil {
		return x.RequiresRobot
	}
	return nil
}

func (x *GRecipe) GetGrossWeight() *wrapperspb.DoubleValue {
	if x != nil {
		return x.GrossWeight
	}
	return nil
}

func (x *GRecipe) GetNetWeight() *wrapperspb.DoubleValue {
	if x != nil {
		return x.NetWeight
	}
	return nil
}

func (x *GRecipe) GetMainApplianceType() GApplianceType {
	if x != nil {
		return x.MainApplianceType
	}
	return GApplianceType_G_APPLIANCE_TYPE_HEAT
}

func (x *GRecipe) GetSecondaryApplianceType() *GApplianceType_Message {
	if x != nil {
		return x.SecondaryApplianceType
	}
	return nil
}

func (x *GRecipe) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GRecipe) GetExtraTags() []string {
	if x != nil {
		return x.ExtraTags
	}
	return nil
}

type GListOfRecipe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GRecipe `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfRecipe) Reset() {
	*x = GListOfRecipe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfRecipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfRecipe) ProtoMessage() {}

func (x *GListOfRecipe) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfRecipe.ProtoReflect.Descriptor instead.
func (*GListOfRecipe) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{79}
}

func (x *GListOfRecipe) GetItems() []*GRecipe {
	if x != nil {
		return x.Items
	}
	return nil
}

type GStarship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Range        []byte `protobuf:"bytes,2,opt,name=range,proto3" json:"range,omitempty"`
	Odometer     []byte `protobuf:"bytes,3,opt,name=odometer,proto3" json:"odometer,omitempty"`
	EngineNumber int32  `protobuf:"varint,4,opt,name=engine_number,json=engineNumber,proto3" json:"engine_number,omitempty"`
}

func (x *GStarship) Reset() {
	*x = GStarship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GStarship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GStarship) ProtoMessage() {}

func (x *GStarship) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GStarship.ProtoReflect.Descriptor instead.
func (*GStarship) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{80}
}

func (x *GStarship) GetRange() []byte {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *GStarship) GetOdometer() []byte {
	if x != nil {
		return x.Odometer
	}
	return nil
}

func (x *GStarship) GetEngineNumber() int32 {
	if x != nil {
		return x.EngineNumber
	}
	return 0
}

type GListOfStarship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GStarship `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfStarship) Reset() {
	*x = GListOfStarship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfStarship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfStarship) ProtoMessage() {}

func (x *GListOfStarship) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfStarship.ProtoReflect.Descriptor instead.
func (*GListOfStarship) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{81}
}

func (x *GListOfStarship) GetItems() []*GStarship {
	if x != nil {
		return x.Items
	}
	return nil
}

type GPerson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoolValue *wrapperspb.BoolValue `protobuf:"bytes,1,opt,name=bool_value,json=boolValue,proto3" json:"bool_value,omitempty"`
	DecVal    []byte                `protobuf:"bytes,2,opt,name=dec_val,json=decVal,proto3" json:"dec_val,omitempty"`
}

func (x *GPerson) Reset() {
	*x = GPerson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GPerson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPerson) ProtoMessage() {}

func (x *GPerson) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPerson.ProtoReflect.Descriptor instead.
func (*GPerson) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{82}
}

func (x *GPerson) GetBoolValue() *wrapperspb.BoolValue {
	if x != nil {
		return x.BoolValue
	}
	return nil
}

func (x *GPerson) GetDecVal() []byte {
	if x != nil {
		return x.DecVal
	}
	return nil
}

type GListOfPerson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GPerson `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfPerson) Reset() {
	*x = GListOfPerson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfPerson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfPerson) ProtoMessage() {}

func (x *GListOfPerson) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfPerson.ProtoReflect.Descriptor instead.
func (*GListOfPerson) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{83}
}

func (x *GListOfPerson) GetItems() []*GPerson {
	if x != nil {
		return x.Items
	}
	return nil
}

type GAbstractParentClass1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GAbstractParentClass1) Reset() {
	*x = GAbstractParentClass1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GAbstractParentClass1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GAbstractParentClass1) ProtoMessage() {}

func (x *GAbstractParentClass1) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GAbstractParentClass1.ProtoReflect.Descriptor instead.
func (*GAbstractParentClass1) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{84}
}

type GListOfAbstractParentClass1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GAbstractParentClass1 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfAbstractParentClass1) Reset() {
	*x = GListOfAbstractParentClass1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfAbstractParentClass1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfAbstractParentClass1) ProtoMessage() {}

func (x *GListOfAbstractParentClass1) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfAbstractParentClass1.ProtoReflect.Descriptor instead.
func (*GListOfAbstractParentClass1) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{85}
}

func (x *GListOfAbstractParentClass1) GetItems() []*GAbstractParentClass1 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GFieldsOfAbstractParentClass2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GFieldsOfAbstractParentClass2) Reset() {
	*x = GFieldsOfAbstractParentClass2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GFieldsOfAbstractParentClass2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GFieldsOfAbstractParentClass2) ProtoMessage() {}

func (x *GFieldsOfAbstractParentClass2) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GFieldsOfAbstractParentClass2.ProtoReflect.Descriptor instead.
func (*GFieldsOfAbstractParentClass2) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{86}
}

type GAbstractParentClass2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Props:
	//
	//	*GAbstractParentClass2_AbstractParentClass2
	//	*GAbstractParentClass2_SubClass1
	Props isGAbstractParentClass2_Props `protobuf_oneof:"props"`
}

func (x *GAbstractParentClass2) Reset() {
	*x = GAbstractParentClass2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GAbstractParentClass2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GAbstractParentClass2) ProtoMessage() {}

func (x *GAbstractParentClass2) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GAbstractParentClass2.ProtoReflect.Descriptor instead.
func (*GAbstractParentClass2) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{87}
}

func (m *GAbstractParentClass2) GetProps() isGAbstractParentClass2_Props {
	if m != nil {
		return m.Props
	}
	return nil
}

func (x *GAbstractParentClass2) GetAbstractParentClass2() *GFieldsOfAbstractParentClass2 {
	if x, ok := x.GetProps().(*GAbstractParentClass2_AbstractParentClass2); ok {
		return x.AbstractParentClass2
	}
	return nil
}

func (x *GAbstractParentClass2) GetSubClass1() *GSubClass1 {
	if x, ok := x.GetProps().(*GAbstractParentClass2_SubClass1); ok {
		return x.SubClass1
	}
	return nil
}

type isGAbstractParentClass2_Props interface {
	isGAbstractParentClass2_Props()
}

type GAbstractParentClass2_AbstractParentClass2 struct {
	AbstractParentClass2 *GFieldsOfAbstractParentClass2 `protobuf:"bytes,1,opt,name=abstract_parent_class2,json=abstractParentClass2,proto3,oneof"`
}

type GAbstractParentClass2_SubClass1 struct {
	SubClass1 *GSubClass1 `protobuf:"bytes,3,opt,name=sub_class1,json=subClass1,proto3,oneof"`
}

func (*GAbstractParentClass2_AbstractParentClass2) isGAbstractParentClass2_Props() {}

func (*GAbstractParentClass2_SubClass1) isGAbstractParentClass2_Props() {}

type GListOfAbstractParentClass2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GAbstractParentClass2 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfAbstractParentClass2) Reset() {
	*x = GListOfAbstractParentClass2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfAbstractParentClass2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfAbstractParentClass2) ProtoMessage() {}

func (x *GListOfAbstractParentClass2) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfAbstractParentClass2.ProtoReflect.Descriptor instead.
func (*GListOfAbstractParentClass2) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{88}
}

func (x *GListOfAbstractParentClass2) GetItems() []*GAbstractParentClass2 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GSubClass1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldsOfSuperClass *GFieldsOfAbstractParentClass2 `protobuf:"bytes,1,opt,name=fieldsOfSuperClass,proto3" json:"fieldsOfSuperClass,omitempty"`
}

func (x *GSubClass1) Reset() {
	*x = GSubClass1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GSubClass1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GSubClass1) ProtoMessage() {}

func (x *GSubClass1) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GSubClass1.ProtoReflect.Descriptor instead.
func (*GSubClass1) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{89}
}

func (x *GSubClass1) GetFieldsOfSuperClass() *GFieldsOfAbstractParentClass2 {
	if x != nil {
		return x.FieldsOfSuperClass
	}
	return nil
}

type GListOfSubClass1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GSubClass1 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfSubClass1) Reset() {
	*x = GListOfSubClass1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfSubClass1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfSubClass1) ProtoMessage() {}

func (x *GListOfSubClass1) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfSubClass1.ProtoReflect.Descriptor instead.
func (*GListOfSubClass1) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{90}
}

func (x *GListOfSubClass1) GetItems() []*GSubClass1 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GFieldsOfScheduleConstraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GFieldsOfScheduleConstraint) Reset() {
	*x = GFieldsOfScheduleConstraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GFieldsOfScheduleConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GFieldsOfScheduleConstraint) ProtoMessage() {}

func (x *GFieldsOfScheduleConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GFieldsOfScheduleConstraint.ProtoReflect.Descriptor instead.
func (*GFieldsOfScheduleConstraint) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{91}
}

type GScheduleConstraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Props:
	//
	//	*GScheduleConstraint_ScheduleConstraint
	//	*GScheduleConstraint_ContestConstraint
	Props isGScheduleConstraint_Props `protobuf_oneof:"props"`
}

func (x *GScheduleConstraint) Reset() {
	*x = GScheduleConstraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GScheduleConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GScheduleConstraint) ProtoMessage() {}

func (x *GScheduleConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GScheduleConstraint.ProtoReflect.Descriptor instead.
func (*GScheduleConstraint) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{92}
}

func (m *GScheduleConstraint) GetProps() isGScheduleConstraint_Props {
	if m != nil {
		return m.Props
	}
	return nil
}

func (x *GScheduleConstraint) GetScheduleConstraint() *GFieldsOfScheduleConstraint {
	if x, ok := x.GetProps().(*GScheduleConstraint_ScheduleConstraint); ok {
		return x.ScheduleConstraint
	}
	return nil
}

func (x *GScheduleConstraint) GetContestConstraint() *GContestConstraint {
	if x, ok := x.GetProps().(*GScheduleConstraint_ContestConstraint); ok {
		return x.ContestConstraint
	}
	return nil
}

type isGScheduleConstraint_Props interface {
	isGScheduleConstraint_Props()
}

type GScheduleConstraint_ScheduleConstraint struct {
	ScheduleConstraint *GFieldsOfScheduleConstraint `protobuf:"bytes,1,opt,name=schedule_constraint,json=scheduleConstraint,proto3,oneof"`
}

type GScheduleConstraint_ContestConstraint struct {
	ContestConstraint *GContestConstraint `protobuf:"bytes,3,opt,name=contest_constraint,json=contestConstraint,proto3,oneof"`
}

func (*GScheduleConstraint_ScheduleConstraint) isGScheduleConstraint_Props() {}

func (*GScheduleConstraint_ContestConstraint) isGScheduleConstraint_Props() {}

type GListOfScheduleConstraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GScheduleConstraint `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfScheduleConstraint) Reset() {
	*x = GListOfScheduleConstraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfScheduleConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfScheduleConstraint) ProtoMessage() {}

func (x *GListOfScheduleConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfScheduleConstraint.ProtoReflect.Descriptor instead.
func (*GListOfScheduleConstraint) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{93}
}

func (x *GListOfScheduleConstraint) GetItems() []*GScheduleConstraint {
	if x != nil {
		return x.Items
	}
	return nil
}

type GConstraintAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GConstraintAdded) Reset() {
	*x = GConstraintAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GConstraintAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GConstraintAdded) ProtoMessage() {}

func (x *GConstraintAdded) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GConstraintAdded.ProtoReflect.Descriptor instead.
func (*GConstraintAdded) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{94}
}

type GListOfConstraintAdded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GConstraintAdded `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfConstraintAdded) Reset() {
	*x = GListOfConstraintAdded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfConstraintAdded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfConstraintAdded) ProtoMessage() {}

func (x *GListOfConstraintAdded) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfConstraintAdded.ProtoReflect.Descriptor instead.
func (*GListOfConstraintAdded) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{95}
}

func (x *GListOfConstraintAdded) GetItems() []*GConstraintAdded {
	if x != nil {
		return x.Items
	}
	return nil
}

type GContestConstraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldsOfSuperClass *GFieldsOfScheduleConstraint `protobuf:"bytes,1,opt,name=fieldsOfSuperClass,proto3" json:"fieldsOfSuperClass,omitempty"`
}

func (x *GContestConstraint) Reset() {
	*x = GContestConstraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GContestConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GContestConstraint) ProtoMessage() {}

func (x *GContestConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GContestConstraint.ProtoReflect.Descriptor instead.
func (*GContestConstraint) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{96}
}

func (x *GContestConstraint) GetFieldsOfSuperClass() *GFieldsOfScheduleConstraint {
	if x != nil {
		return x.FieldsOfSuperClass
	}
	return nil
}

type GListOfContestConstraint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GContestConstraint `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfContestConstraint) Reset() {
	*x = GListOfContestConstraint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfContestConstraint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfContestConstraint) ProtoMessage() {}

func (x *GListOfContestConstraint) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfContestConstraint.ProtoReflect.Descriptor instead.
func (*GListOfContestConstraint) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{97}
}

func (x *GListOfContestConstraint) GetItems() []*GContestConstraint {
	if x != nil {
		return x.Items
	}
	return nil
}

type GFieldsOfBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GFieldsOfBranch) Reset() {
	*x = GFieldsOfBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GFieldsOfBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GFieldsOfBranch) ProtoMessage() {}

func (x *GFieldsOfBranch) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GFieldsOfBranch.ProtoReflect.Descriptor instead.
func (*GFieldsOfBranch) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{98}
}

type GBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Props:
	//
	//	*GBranch_Branch
	//	*GBranch_Twig
	Props isGBranch_Props `protobuf_oneof:"props"`
}

func (x *GBranch) Reset() {
	*x = GBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBranch) ProtoMessage() {}

func (x *GBranch) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBranch.ProtoReflect.Descriptor instead.
func (*GBranch) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{99}
}

func (m *GBranch) GetProps() isGBranch_Props {
	if m != nil {
		return m.Props
	}
	return nil
}

func (x *GBranch) GetBranch() *GFieldsOfBranch {
	if x, ok := x.GetProps().(*GBranch_Branch); ok {
		return x.Branch
	}
	return nil
}

func (x *GBranch) GetTwig() *GTwig {
	if x, ok := x.GetProps().(*GBranch_Twig); ok {
		return x.Twig
	}
	return nil
}

type isGBranch_Props interface {
	isGBranch_Props()
}

type GBranch_Branch struct {
	Branch *GFieldsOfBranch `protobuf:"bytes,1,opt,name=branch,proto3,oneof"`
}

type GBranch_Twig struct {
	Twig *GTwig `protobuf:"bytes,3,opt,name=twig,proto3,oneof"`
}

func (*GBranch_Branch) isGBranch_Props() {}

func (*GBranch_Twig) isGBranch_Props() {}

type GListOfBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GBranch `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfBranch) Reset() {
	*x = GListOfBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfBranch) ProtoMessage() {}

func (x *GListOfBranch) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfBranch.ProtoReflect.Descriptor instead.
func (*GListOfBranch) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{100}
}

func (x *GListOfBranch) GetItems() []*GBranch {
	if x != nil {
		return x.Items
	}
	return nil
}

type GFieldsOfTwig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldsOfSuperClass *GFieldsOfBranch `protobuf:"bytes,1,opt,name=fieldsOfSuperClass,proto3" json:"fieldsOfSuperClass,omitempty"`
	Prop1              int32            `protobuf:"varint,2,opt,name=prop1,proto3" json:"prop1,omitempty"`
	Prop2              int32            `protobuf:"varint,4,opt,name=prop2,proto3" json:"prop2,omitempty"`
}

func (x *GFieldsOfTwig) Reset() {
	*x = GFieldsOfTwig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GFieldsOfTwig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GFieldsOfTwig) ProtoMessage() {}

func (x *GFieldsOfTwig) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GFieldsOfTwig.ProtoReflect.Descriptor instead.
func (*GFieldsOfTwig) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{101}
}

func (x *GFieldsOfTwig) GetFieldsOfSuperClass() *GFieldsOfBranch {
	if x != nil {
		return x.FieldsOfSuperClass
	}
	return nil
}

func (x *GFieldsOfTwig) GetProp1() int32 {
	if x != nil {
		return x.Prop1
	}
	return 0
}

func (x *GFieldsOfTwig) GetProp2() int32 {
	if x != nil {
		return x.Prop2
	}
	return 0
}

type GTwig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Props:
	//
	//	*GTwig_Twig
	//	*GTwig_Leaf
	Props isGTwig_Props `protobuf_oneof:"props"`
}

func (x *GTwig) Reset() {
	*x = GTwig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GTwig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GTwig) ProtoMessage() {}

func (x *GTwig) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GTwig.ProtoReflect.Descriptor instead.
func (*GTwig) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{102}
}

func (m *GTwig) GetProps() isGTwig_Props {
	if m != nil {
		return m.Props
	}
	return nil
}

func (x *GTwig) GetTwig() *GFieldsOfTwig {
	if x, ok := x.GetProps().(*GTwig_Twig); ok {
		return x.Twig
	}
	return nil
}

func (x *GTwig) GetLeaf() *GLeaf {
	if x, ok := x.GetProps().(*GTwig_Leaf); ok {
		return x.Leaf
	}
	return nil
}

type isGTwig_Props interface {
	isGTwig_Props()
}

type GTwig_Twig struct {
	Twig *GFieldsOfTwig `protobuf:"bytes,1,opt,name=twig,proto3,oneof"`
}

type GTwig_Leaf struct {
	Leaf *GLeaf `protobuf:"bytes,3,opt,name=leaf,proto3,oneof"`
}

func (*GTwig_Twig) isGTwig_Props() {}

func (*GTwig_Leaf) isGTwig_Props() {}

type GListOfTwig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GTwig `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfTwig) Reset() {
	*x = GListOfTwig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfTwig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfTwig) ProtoMessage() {}

func (x *GListOfTwig) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfTwig.ProtoReflect.Descriptor instead.
func (*GListOfTwig) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{103}
}

func (x *GListOfTwig) GetItems() []*GTwig {
	if x != nil {
		return x.Items
	}
	return nil
}

type GLeaf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldsOfSuperClass *GFieldsOfTwig `protobuf:"bytes,1,opt,name=fieldsOfSuperClass,proto3" json:"fieldsOfSuperClass,omitempty"`
}

func (x *GLeaf) Reset() {
	*x = GLeaf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GLeaf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GLeaf) ProtoMessage() {}

func (x *GLeaf) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GLeaf.ProtoReflect.Descriptor instead.
func (*GLeaf) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{104}
}

func (x *GLeaf) GetFieldsOfSuperClass() *GFieldsOfTwig {
	if x != nil {
		return x.FieldsOfSuperClass
	}
	return nil
}

type GListOfLeaf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GLeaf `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GListOfLeaf) Reset() {
	*x = GListOfLeaf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GListOfLeaf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GListOfLeaf) ProtoMessage() {}

func (x *GListOfLeaf) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GListOfLeaf.ProtoReflect.Descriptor instead.
func (*GListOfLeaf) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{105}
}

func (x *GListOfLeaf) GetItems() []*GLeaf {
	if x != nil {
		return x.Items
	}
	return nil
}

type GApplianceType_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value GApplianceType `protobuf:"varint,1,opt,name=value,proto3,enum=com.company.project.GApplianceType" json:"value,omitempty"`
}

func (x *GApplianceType_Message) Reset() {
	*x = GApplianceType_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GApplianceType_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GApplianceType_Message) ProtoMessage() {}

func (x *GApplianceType_Message) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GApplianceType_Message.ProtoReflect.Descriptor instead.
func (*GApplianceType_Message) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{106}
}

func (x *GApplianceType_Message) GetValue() GApplianceType {
	if x != nil {
		return x.Value
	}
	return GApplianceType_G_APPLIANCE_TYPE_HEAT
}

type GRecipeTypes_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value GRecipeTypes `protobuf:"varint,1,opt,name=value,proto3,enum=com.company.project.GRecipeTypes" json:"value,omitempty"`
}

func (x *GRecipeTypes_Message) Reset() {
	*x = GRecipeTypes_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GRecipeTypes_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GRecipeTypes_Message) ProtoMessage() {}

func (x *GRecipeTypes_Message) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GRecipeTypes_Message.ProtoReflect.Descriptor instead.
func (*GRecipeTypes_Message) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{107}
}

func (x *GRecipeTypes_Message) GetValue() GRecipeTypes {
	if x != nil {
		return x.Value
	}
	return GRecipeTypes_G_RECIPE_TYPES_COOK
}

type GKnifeType_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value GKnifeType `protobuf:"varint,1,opt,name=value,proto3,enum=com.company.project.GKnifeType" json:"value,omitempty"`
}

func (x *GKnifeType_Message) Reset() {
	*x = GKnifeType_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GKnifeType_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GKnifeType_Message) ProtoMessage() {}

func (x *GKnifeType_Message) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GKnifeType_Message.ProtoReflect.Descriptor instead.
func (*GKnifeType_Message) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{108}
}

func (x *GKnifeType_Message) GetValue() GKnifeType {
	if x != nil {
		return x.Value
	}
	return GKnifeType_G_KNIFE_TYPE_CHEFS_KNIFE
}

type GChefType_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value GChefType `protobuf:"varint,1,opt,name=value,proto3,enum=com.company.project.GChefType" json:"value,omitempty"`
}

func (x *GChefType_Message) Reset() {
	*x = GChefType_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GChefType_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GChefType_Message) ProtoMessage() {}

func (x *GChefType_Message) ProtoReflect() protoreflect.Message {
	mi := &file_model_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GChefType_Message.ProtoReflect.Descriptor instead.
func (*GChefType_Message) Descriptor() ([]byte, []int) {
	return file_model_proto_rawDescGZIP(), []int{109}
}

func (x *GChefType_Message) GetValue() GChefType {
	if x != nil {
		return x.Value
	}
	return GChefType_G_CHEF_TYPE_SENIOR_CHEF
}

var File_model_proto protoreflect.FileDescriptor

var file_model_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x01, 0x0a, 0x0f, 0x47, 0x43, 0x61, 0x6c, 0x63, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x31, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x32, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x33, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x34, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x35, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x35, 0x22, 0x53, 0x0a, 0x15, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x61, 0x6c, 0x63,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x47, 0x43, 0x61, 0x6c, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x25, 0x0a, 0x0b, 0x47, 0x43, 0x61, 0x6c, 0x63, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4b, 0x0a,
	0x11, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x61, 0x6c, 0x63, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x61, 0x6c, 0x63, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xdf, 0x02, 0x0a, 0x09, 0x47,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x46,
	0x0a, 0x0e, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x15, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x10,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x52, 0x0a, 0x14, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x13, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x47, 0x0a, 0x0f,
	0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2e, 0x0a, 0x0a, 0x47, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x10, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x3f, 0x0a, 0x11, 0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x57, 0x0a, 0x17, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x31, 0x12, 0x3c, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x31, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3f, 0x0a, 0x11, 0x47, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x32, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x17, 0x47,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x32, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x32, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x3f, 0x0a, 0x11, 0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x33, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x17, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x33,
	0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x33, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3f,
	0x0a, 0x11, 0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x57, 0x0a, 0x17, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x34, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x34, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3f, 0x0a, 0x11, 0x47, 0x43, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x35, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x17, 0x47, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x35, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x35, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x7a, 0x0a, 0x11, 0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x36, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x57,
	0x0a, 0x17, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x36, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x36,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x5c, 0x0a, 0x11, 0x47, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x37, 0x12, 0x33, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x17, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x37,
	0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x37, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x5c,
	0x0a, 0x11, 0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x38, 0x12, 0x33, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x57, 0x0a, 0x17,
	0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x38, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x38, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x08, 0x0a, 0x06, 0x47, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x41, 0x0a, 0x0c, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x6e, 0x0a, 0x18, 0x47, 0x45, 0x6e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x2f, 0x0a, 0x13, 0x65, 0x6e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x65, 0x6e, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x22, 0x65, 0x0a, 0x1e, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x45, 0x6e, 0x63,
	0x61, 0x70, 0x73, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x43, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x45, 0x6e, 0x63, 0x61, 0x70,
	0x73, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xed, 0x03, 0x0a, 0x0b, 0x47, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x10, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x63, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0e, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0f,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x54, 0x0a, 0x15, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
	0x14, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x14, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x52, 0x13, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4b, 0x0a, 0x11, 0x47, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x36,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x47, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x18, 0x0a, 0x04, 0x47, 0x4b, 0x65, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x3d, 0x0a, 0x0a, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x4b, 0x65, 0x79, 0x12, 0x2f,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x47, 0x4b, 0x65, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0xb2, 0x05, 0x0a, 0x0a, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x62, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x08, 0x52, 0x06,
	0x76, 0x62, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x76, 0x62, 0x6f, 0x6f, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x76, 0x62, 0x6f, 0x6f, 0x6c, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x76, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x76, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x76, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x76, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x76, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x76, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x6e, 0x76, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6e, 0x76, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x76, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x76, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x3c,
	0x0a, 0x0b, 0x6e, 0x76, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x6e, 0x76, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x76, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x09, 0x76, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x76,
	0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a,
	0x6e, 0x76, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x76, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x76, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x06, 0x6e, 0x76, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x01, 0x52, 0x08, 0x76, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x76, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x01, 0x52, 0x09, 0x6e, 0x76, 0x64, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x73, 0x12, 0x4e, 0x0a, 0x10, 0x76, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0f, 0x76, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x50, 0x0a, 0x11, 0x6e, 0x76, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x47, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x10, 0x6e, 0x76, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x22, 0x49, 0x0a, 0x10, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x7f, 0x0a, 0x09, 0x47, 0x41, 0x69, 0x72, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x56, 0x0a, 0x12,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x41, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74,
	0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x67, 0x73, 0x70, 0x61, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x67, 0x73, 0x70, 0x61, 0x6e,
	0x22, 0x47, 0x0a, 0x0f, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x41, 0x69, 0x72, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x41, 0x69, 0x72, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x5d, 0x0a, 0x08, 0x47, 0x42, 0x61,
	0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x65, 0x69, 0x6c, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0x45, 0x0a, 0x0e, 0x47, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x66, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x47, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0xa2, 0x01, 0x0a, 0x08, 0x47, 0x42, 0x69, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x5d, 0x0a, 0x12,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f,
	0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x77,
	0x68, 0x65, 0x65, 0x6c, 0x5f, 0x64, 0x69, 0x61, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x44, 0x69, 0x61, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x45, 0x0a, 0x0e, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x42,
	0x69, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x42, 0x69, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x04,
	0x47, 0x43, 0x61, 0x72, 0x12, 0x55, 0x0a, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f,
	0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x6f, 0x6f, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x44, 0x6f,
	0x6f, 0x72, 0x73, 0x22, 0x3d, 0x0a, 0x0a, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x61,
	0x72, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x61, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x1b, 0x0a, 0x07, 0x47, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x43, 0x0a, 0x0d, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x67, 0x0a, 0x0b, 0x47, 0x47, 0x79, 0x72, 0x6f, 0x63, 0x6f, 0x70,
	0x74, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x52,
	0x6f, 0x74, 0x6f, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x4b, 0x0a,
	0x11, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x47, 0x79, 0x72, 0x6f, 0x63, 0x6f, 0x70, 0x74,
	0x65, 0x72, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x47, 0x79, 0x72, 0x6f, 0x63, 0x6f, 0x70,
	0x74, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x67, 0x0a, 0x0b, 0x47, 0x48,
	0x65, 0x6c, 0x69, 0x63, 0x6f, 0x70, 0x74, 0x65, 0x72, 0x12, 0x58, 0x0a, 0x12, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x4f, 0x66, 0x52, 0x6f, 0x74, 0x6f, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x52,
	0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x22, 0x4b, 0x0a, 0x11, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x48, 0x65,
	0x6c, 0x69, 0x63, 0x6f, 0x70, 0x74, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x48,
	0x65, 0x6c, 0x69, 0x63, 0x6f, 0x70, 0x74, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x7b, 0x0a, 0x08, 0x47, 0x53, 0x63, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x5d, 0x0a, 0x12,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f,
	0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x45, 0x0a,
	0x0e, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x63, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12,
	0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x53, 0x63, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x32, 0x0a, 0x18, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f,
	0x66, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xed, 0x01, 0x0a, 0x10, 0x47, 0x41, 0x62,
	0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x5a, 0x0a,
	0x10, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x56,
	0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x62, 0x69, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x47, 0x42, 0x69, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x07, 0x62, 0x69, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x53, 0x63, 0x6f,
	0x6f, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x42,
	0x07, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x22, 0x55, 0x0a, 0x16, 0x47, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x66, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x56, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0xa5, 0x01, 0x0a, 0x11, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x41, 0x69, 0x72,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x12, 0x55, 0x0a, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f,
	0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f,
	0x66, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x65,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x97, 0x02, 0x0a, 0x09, 0x47, 0x41, 0x69, 0x72,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x12, 0x44, 0x0a, 0x08, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x41, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x48,
	0x00, 0x52, 0x08, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x61,
	0x69, 0x72, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x47, 0x41, 0x69, 0x72, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x61, 0x69, 0x72, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x72, 0x6f, 0x74,
	0x6f, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x47, 0x52, 0x6f, 0x74, 0x6f, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x48,
	0x00, 0x52, 0x0a, 0x72, 0x6f, 0x74, 0x6f, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x12, 0x39, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x07, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x70,
	0x73, 0x22, 0x47, 0x0a, 0x0f, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x41, 0x69, 0x72, 0x63,
	0x72, 0x61, 0x66, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x41, 0x69, 0x72, 0x63, 0x72,
	0x61, 0x66, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x6d, 0x0a, 0x13, 0x47, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x52, 0x6f, 0x74, 0x6f, 0x72, 0x63, 0x72, 0x61, 0x66,
	0x74, 0x12, 0x56, 0x0a, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x41, 0x69, 0x72,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0xea, 0x01, 0x0a, 0x0b, 0x47, 0x52,
	0x6f, 0x74, 0x6f, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x12, 0x4a, 0x0a, 0x0a, 0x72, 0x6f, 0x74,
	0x6f, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x52, 0x6f, 0x74,
	0x6f, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x6f, 0x74, 0x6f, 0x72,
	0x63, 0x72, 0x61, 0x66, 0x74, 0x12, 0x42, 0x0a, 0x0a, 0x68, 0x65, 0x6c, 0x69, 0x63, 0x6f, 0x70,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x47, 0x48, 0x65, 0x6c, 0x69, 0x63, 0x6f, 0x70, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x68,
	0x65, 0x6c, 0x69, 0x63, 0x6f, 0x70, 0x74, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0a, 0x67, 0x79, 0x72,
	0x6f, 0x63, 0x6f, 0x70, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x47, 0x47, 0x79, 0x72, 0x6f, 0x63, 0x6f, 0x70, 0x74, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x0a, 0x67, 0x79, 0x72, 0x6f, 0x63, 0x6f, 0x70, 0x74, 0x65, 0x72, 0x42, 0x07, 0x0a,
	0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x22, 0x4b, 0x0a, 0x11, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f,
	0x66, 0x52, 0x6f, 0x74, 0x6f, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x47, 0x52, 0x6f, 0x74, 0x6f, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x2a, 0x0a, 0x10, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0xc3, 0x01, 0x0a, 0x08, 0x47, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x07,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x56, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12,
	0x3c, 0x0a, 0x08, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x41, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66,
	0x74, 0x48, 0x00, 0x52, 0x08, 0x61, 0x69, 0x72, 0x63, 0x72, 0x61, 0x66, 0x74, 0x12, 0x2d, 0x0a,
	0x03, 0x63, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x47, 0x43, 0x61, 0x72, 0x48, 0x00, 0x52, 0x03, 0x63, 0x61, 0x72, 0x42, 0x07, 0x0a, 0x05,
	0x70, 0x72, 0x6f, 0x70, 0x73, 0x22, 0x45, 0x0a, 0x0e, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x56, 0x65,
	0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x51, 0x0a, 0x06,
	0x47, 0x4b, 0x6e, 0x69, 0x66, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x4b, 0x6e, 0x69, 0x66, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x41, 0x0a, 0x0c, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x4b, 0x6e, 0x69, 0x66, 0x65, 0x12,
	0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x4b, 0x6e, 0x69, 0x66, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x4d, 0x0a, 0x0c, 0x47, 0x47, 0x61, 0x72, 0x6c, 0x69, 0x63, 0x50, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x5f, 0x77, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x57, 0x61, 0x73, 0x68, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x4d, 0x0a, 0x12, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x47, 0x61, 0x72, 0x6c,
	0x69, 0x63, 0x50, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x47, 0x61,
	0x72, 0x6c, 0x69, 0x63, 0x50, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0xc0, 0x02, 0x0a, 0x08, 0x47, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x12, 0x3d, 0x0a,
	0x0b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0a,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x4b, 0x69, 0x74, 0x63, 0x68, 0x65, 0x6e, 0x2e,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x4c, 0x0a, 0x14, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x1a, 0x5a, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x47, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x45, 0x0a, 0x0e, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x4b, 0x69,
	0x74, 0x63, 0x68, 0x65, 0x6e, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x4b, 0x69, 0x74, 0x63,
	0x68, 0x65, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x8a, 0x03, 0x0a, 0x05, 0x47,
	0x43, 0x68, 0x65, 0x66, 0x12, 0x45, 0x0a, 0x0f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x47, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x0e, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x66,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x4b, 0x6e, 0x69, 0x66, 0x65,
	0x52, 0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x4b, 0x6e, 0x69, 0x66, 0x65, 0x12,
	0x5b, 0x0a, 0x17, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x15, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a,
	0x0a, 0x73, 0x68, 0x65, 0x6c, 0x66, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x73, 0x68,
	0x65, 0x6c, 0x66, 0x4c, 0x69, 0x66, 0x65, 0x22, 0x3f, 0x0a, 0x0b, 0x47, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x66, 0x43, 0x68, 0x65, 0x66, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x68, 0x65,
	0x66, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x57, 0x0a, 0x09, 0x47, 0x53, 0x6f, 0x75,
	0x73, 0x43, 0x68, 0x65, 0x66, 0x12, 0x4a, 0x0a, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f,
	0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x68, 0x65, 0x66, 0x52, 0x12, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x22, 0x47, 0x0a, 0x0f, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x6f, 0x75, 0x73,
	0x43, 0x68, 0x65, 0x66, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x53, 0x6f, 0x75, 0x73, 0x43,
	0x68, 0x65, 0x66, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x0c, 0x47,
	0x4b, 0x6e, 0x69, 0x66, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x12, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43,
	0x68, 0x65, 0x66, 0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x66, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x5f, 0x6b, 0x6e, 0x69, 0x66, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x4b, 0x6e, 0x69, 0x66, 0x65, 0x52, 0x0d, 0x66, 0x61,
	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x4b, 0x6e, 0x69, 0x66, 0x65, 0x22, 0x4d, 0x0a, 0x12, 0x47,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x4b, 0x6e, 0x69, 0x66, 0x65, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x4b, 0x6e, 0x69, 0x66, 0x65, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa2, 0x03, 0x0a, 0x0a, 0x47,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x5d, 0x0a, 0x10, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x68, 0x69,
	0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x5a, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x70, 0x61,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x1a, 0x41, 0x0a, 0x13,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x5e, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x49, 0x0a, 0x10, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x11, 0x47,
	0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x12, 0x46, 0x0a, 0x11, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0x57, 0x0a, 0x17, 0x47, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x50, 0x72, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xbe, 0x07, 0x0a, 0x07, 0x47, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x42, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x49, 0x6e, 0x67,
	0x72, 0x65, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x4c, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x70, 0x72, 0x65, 0x70, 0x61,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40,
	0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x5f,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x73, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x3f, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x73, 0x73, 0x5f,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x73,
	0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x5f, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x53, 0x0a, 0x13, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x61, 0x6e,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x11, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x65, 0x0a, 0x18, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x47, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x16, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x54,
	0x61, 0x67, 0x73, 0x22, 0x43, 0x0a, 0x0d, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x62, 0x0a, 0x09, 0x47, 0x53, 0x74, 0x61,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6f,
	0x64, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x47, 0x0a, 0x0f,
	0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12,
	0x34, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x53, 0x74, 0x61, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x5d, 0x0a, 0x07, 0x47, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64,
	0x65, 0x63, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x64, 0x65,
	0x63, 0x56, 0x61, 0x6c, 0x22, 0x43, 0x0a, 0x0d, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x41, 0x62,
	0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x31, 0x22, 0x5f, 0x0a, 0x1b, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x41, 0x62, 0x73,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x31, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x31, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66,
	0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x32, 0x22, 0xce, 0x01, 0x0a, 0x15, 0x47, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x12, 0x6a,
	0x0a, 0x16, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x41, 0x62,
	0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x32, 0x48, 0x00, 0x52, 0x14, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x12, 0x40, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x53, 0x75, 0x62, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x31, 0x48,
	0x00, 0x52, 0x09, 0x73, 0x75, 0x62, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x31, 0x42, 0x07, 0x0a, 0x05,
	0x70, 0x72, 0x6f, 0x70, 0x73, 0x22, 0x5f, 0x0a, 0x1b, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66,
	0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x32, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x41, 0x62, 0x73, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x70, 0x0a, 0x0a, 0x47, 0x53, 0x75, 0x62, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x31, 0x12, 0x62, 0x0a, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66,
	0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x32, 0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x49, 0x0a, 0x10, 0x47, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x66, 0x53, 0x75, 0x62, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x31, 0x12, 0x35, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x47, 0x53, 0x75, 0x62, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x31, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x13, 0x47, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x63, 0x0a, 0x13, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x12, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12,
	0x58, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x47, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x72, 0x6f,
	0x70, 0x73, 0x22, 0x5b, 0x0a, 0x19, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12,
	0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x12, 0x0a, 0x10, 0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x22, 0x55, 0x0a, 0x16, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x3b, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x76, 0x0a, 0x12, 0x47, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74,
	0x12, 0x60, 0x0a, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x12,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x22, 0x59, 0x0a, 0x18, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x12, 0x3d,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x11, 0x0a,
	0x0f, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x22, 0x84, 0x01, 0x0a, 0x07, 0x47, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x3e, 0x0a, 0x06,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x42, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x48, 0x00, 0x52, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x30, 0x0a, 0x04,
	0x74, 0x77, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x47, 0x54, 0x77, 0x69, 0x67, 0x48, 0x00, 0x52, 0x04, 0x74, 0x77, 0x69, 0x67, 0x42, 0x07,
	0x0a, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x22, 0x43, 0x0a, 0x0d, 0x47, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x66, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x91, 0x01, 0x0a,
	0x0d, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x54, 0x77, 0x69, 0x67, 0x12, 0x54,
	0x0a, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x47, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x31, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x6f, 0x70, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x32,
	0x22, 0x7c, 0x0a, 0x05, 0x47, 0x54, 0x77, 0x69, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x77, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x4f, 0x66, 0x54, 0x77, 0x69, 0x67, 0x48, 0x00, 0x52, 0x04, 0x74,
	0x77, 0x69, 0x67, 0x12, 0x30, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x4c, 0x65, 0x61, 0x66, 0x48, 0x00, 0x52,
	0x04, 0x6c, 0x65, 0x61, 0x66, 0x42, 0x07, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x22, 0x3f,
	0x0a, 0x0b, 0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x54, 0x77, 0x69, 0x67, 0x12, 0x30, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x54, 0x77, 0x69, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x5b, 0x0a, 0x05, 0x47, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x52, 0x0a, 0x12, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x4f, 0x66, 0x54, 0x77, 0x69, 0x67, 0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x4f, 0x66, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x3f, 0x0a, 0x0b,
	0x47, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x30, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x47, 0x4c, 0x65, 0x61, 0x66, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x53, 0x0a,
	0x16, 0x47, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x4f, 0x0a, 0x14, 0x47, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x47, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x12, 0x47, 0x4b, 0x6e, 0x69, 0x66, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x4b, 0x6e, 0x69, 0x66, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x49, 0x0a, 0x11, 0x47, 0x43, 0x68, 0x65, 0x66, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x43, 0x68, 0x65, 0x66,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x64, 0x0a, 0x0e, 0x47,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x15, 0x47, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x48, 0x45, 0x41, 0x54, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x5f, 0x41, 0x50,
	0x50, 0x4c, 0x49, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4c,
	0x44, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x41, 0x4e,
	0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x55, 0x54, 0x4c, 0x45, 0x52, 0x59, 0x10,
	0x02, 0x2a, 0x72, 0x0a, 0x0c, 0x47, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x5f, 0x52, 0x45, 0x43, 0x49, 0x50, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x53, 0x5f, 0x43, 0x4f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x5f,
	0x52, 0x45, 0x43, 0x49, 0x50, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x47, 0x52, 0x49,
	0x4c, 0x4c, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x5f, 0x52, 0x45, 0x43, 0x49, 0x50, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x46, 0x52, 0x59, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13,
	0x47, 0x5f, 0x52, 0x45, 0x43, 0x49, 0x50, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53, 0x5f, 0x53,
	0x54, 0x45, 0x57, 0x10, 0x03, 0x2a, 0x67, 0x0a, 0x0a, 0x47, 0x4b, 0x6e, 0x69, 0x66, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x5f, 0x4b, 0x4e, 0x49, 0x46, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x46, 0x53, 0x5f, 0x4b, 0x4e, 0x49, 0x46, 0x45, 0x10,
	0x00, 0x12, 0x1d, 0x0a, 0x19, 0x47, 0x5f, 0x4b, 0x4e, 0x49, 0x46, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x50, 0x41, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x4b, 0x4e, 0x49, 0x46, 0x45, 0x10, 0x01,
	0x12, 0x1c, 0x0a, 0x18, 0x47, 0x5f, 0x4b, 0x4e, 0x49, 0x46, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x42, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x4b, 0x4e, 0x49, 0x46, 0x45, 0x10, 0x02, 0x2a, 0x7b,
	0x0a, 0x09, 0x47, 0x43, 0x68, 0x65, 0x66, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x47,
	0x5f, 0x43, 0x48, 0x45, 0x46, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x4e, 0x49, 0x4f,
	0x52, 0x5f, 0x43, 0x48, 0x45, 0x46, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x5f, 0x43, 0x48,
	0x45, 0x46, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4f, 0x55, 0x53, 0x5f, 0x43, 0x48, 0x45,
	0x46, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x5f, 0x43, 0x48, 0x45, 0x46, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x54, 0x52, 0x59, 0x5f, 0x43, 0x48, 0x45, 0x46, 0x10, 0x02,
	0x12, 0x19, 0x0a, 0x15, 0x47, 0x5f, 0x43, 0x48, 0x45, 0x46, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x46, 0x49, 0x53, 0x48, 0x5f, 0x43, 0x48, 0x45, 0x46, 0x10, 0x03, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x2f, 0x73, 0x74, 0x75, 0x62, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_proto_rawDescOnce sync.Once
	file_model_proto_rawDescData = file_model_proto_rawDesc
)

func file_model_proto_rawDescGZIP() []byte {
	file_model_proto_rawDescOnce.Do(func() {
		file_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_proto_rawDescData)
	})
	return file_model_proto_rawDescData
}

var file_model_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_model_proto_msgTypes = make([]protoimpl.MessageInfo, 113)
var file_model_proto_goTypes = []interface{}{
	(GApplianceType)(0),                    // 0: com.company.project.GApplianceType
	(GRecipeTypes)(0),                      // 1: com.company.project.GRecipeTypes
	(GKnifeType)(0),                        // 2: com.company.project.GKnifeType
	(GChefType)(0),                         // 3: com.company.project.GChefType
	(*GCalcParameters)(nil),                // 4: com.company.project.GCalcParameters
	(*GListOfCalcParameters)(nil),          // 5: com.company.project.GListOfCalcParameters
	(*GCalcResult)(nil),                    // 6: com.company.project.GCalcResult
	(*GListOfCalcResult)(nil),              // 7: com.company.project.GListOfCalcResult
	(*GCategory)(nil),                      // 8: com.company.project.GCategory
	(*GListOfCategory)(nil),                // 9: com.company.project.GListOfCategory
	(*GComponent)(nil),                     // 10: com.company.project.GComponent
	(*GListOfComponent)(nil),               // 11: com.company.project.GListOfComponent
	(*GConstructObject1)(nil),              // 12: com.company.project.GConstructObject1
	(*GListOfConstructObject1)(nil),        // 13: com.company.project.GListOfConstructObject1
	(*GConstructObject2)(nil),              // 14: com.company.project.GConstructObject2
	(*GListOfConstructObject2)(nil),        // 15: com.company.project.GListOfConstructObject2
	(*GConstructObject3)(nil),              // 16: com.company.project.GConstructObject3
	(*GListOfConstructObject3)(nil),        // 17: com.company.project.GListOfConstructObject3
	(*GConstructObject4)(nil),              // 18: com.company.project.GConstructObject4
	(*GListOfConstructObject4)(nil),        // 19: com.company.project.GListOfConstructObject4
	(*GConstructObject5)(nil),              // 20: com.company.project.GConstructObject5
	(*GListOfConstructObject5)(nil),        // 21: com.company.project.GListOfConstructObject5
	(*GConstructObject6)(nil),              // 22: com.company.project.GConstructObject6
	(*GListOfConstructObject6)(nil),        // 23: com.company.project.GListOfConstructObject6
	(*GConstructObject7)(nil),              // 24: com.company.project.GConstructObject7
	(*GListOfConstructObject7)(nil),        // 25: com.company.project.GListOfConstructObject7
	(*GConstructObject8)(nil),              // 26: com.company.project.GConstructObject8
	(*GListOfConstructObject8)(nil),        // 27: com.company.project.GListOfConstructObject8
	(*GEmpty)(nil),                         // 28: com.company.project.GEmpty
	(*GListOfEmpty)(nil),                   // 29: com.company.project.GListOfEmpty
	(*GEncapsulatedFieldsClass)(nil),       // 30: com.company.project.GEncapsulatedFieldsClass
	(*GListOfEncapsulatedFieldsClass)(nil), // 31: com.company.project.GListOfEncapsulatedFieldsClass
	(*GIngredient)(nil),                    // 32: com.company.project.GIngredient
	(*GListOfIngredient)(nil),              // 33: com.company.project.GListOfIngredient
	(*GKey)(nil),                           // 34: com.company.project.GKey
	(*GListOfKey)(nil),                     // 35: com.company.project.GListOfKey
	(*GListsHost)(nil),                     // 36: com.company.project.GListsHost
	(*GListOfListsHost)(nil),               // 37: com.company.project.GListOfListsHost
	(*GAirplane)(nil),                      // 38: com.company.project.GAirplane
	(*GListOfAirplane)(nil),                // 39: com.company.project.GListOfAirplane
	(*GBalloon)(nil),                       // 40: com.company.project.GBalloon
	(*GListOfBalloon)(nil),                 // 41: com.company.project.GListOfBalloon
	(*GBicycle)(nil),                       // 42: com.company.project.GBicycle
	(*GListOfBicycle)(nil),                 // 43: com.company.project.GListOfBicycle
	(*GCar)(nil),                           // 44: com.company.project.GCar
	(*GListOfCar)(nil),                     // 45: com.company.project.GListOfCar
	(*GEntity)(nil),                        // 46: com.company.project.GEntity
	(*GListOfEntity)(nil),                  // 47: com.company.project.GListOfEntity
	(*GGyrocopter)(nil),                    // 48: com.company.project.GGyrocopter
	(*GListOfGyrocopter)(nil),              // 49: com.company.project.GListOfGyrocopter
	(*GHelicopter)(nil),                    // 50: com.company.project.GHelicopter
	(*GListOfHelicopter)(nil),              // 51: com.company.project.GListOfHelicopter
	(*GScooter)(nil),                       // 52: com.company.project.GScooter
	(*GListOfScooter)(nil),                 // 53: com.company.project.GListOfScooter
	(*GFieldsOfAbstractVehicle)(nil),       // 54: com.company.project.GFieldsOfAbstractVehicle
	(*GAbstractVehicle)(nil),               // 55: com.company.project.GAbstractVehicle
	(*GListOfAbstractVehicle)(nil),         // 56: com.company.project.GListOfAbstractVehicle
	(*GFieldsOfAircraft)(nil),              // 57: com.company.project.GFieldsOfAircraft
	(*GAircraft)(nil),                      // 58: com.company.project.GAircraft
	(*GListOfAircraft)(nil),                // 59: com.company.project.GListOfAircraft
	(*GFieldsOfRotorcraft)(nil),            // 60: com.company.project.GFieldsOfRotorcraft
	(*GRotorcraft)(nil),                    // 61: com.company.project.GRotorcraft
	(*GListOfRotorcraft)(nil),              // 62: com.company.project.GListOfRotorcraft
	(*GFieldsOfVehicle)(nil),               // 63: com.company.project.GFieldsOfVehicle
	(*GVehicle)(nil),                       // 64: com.company.project.GVehicle
	(*GListOfVehicle)(nil),                 // 65: com.company.project.GListOfVehicle
	(*GKnife)(nil),                         // 66: com.company.project.GKnife
	(*GListOfKnife)(nil),                   // 67: com.company.project.GListOfKnife
	(*GGarlicPress)(nil),                   // 68: com.company.project.GGarlicPress
	(*GListOfGarlicPress)(nil),             // 69: com.company.project.GListOfGarlicPress
	(*GKitchen)(nil),                       // 70: com.company.project.GKitchen
	(*GListOfKitchen)(nil),                 // 71: com.company.project.GListOfKitchen
	(*GChef)(nil),                          // 72: com.company.project.GChef
	(*GListOfChef)(nil),                    // 73: com.company.project.GListOfChef
	(*GSousChef)(nil),                      // 74: com.company.project.GSousChef
	(*GListOfSousChef)(nil),                // 75: com.company.project.GListOfSousChef
	(*GKnifeMaster)(nil),                   // 76: com.company.project.GKnifeMaster
	(*GListOfKnifeMaster)(nil),             // 77: com.company.project.GListOfKnifeMaster
	(*GInventory)(nil),                     // 78: com.company.project.GInventory
	(*GListOfInventory)(nil),               // 79: com.company.project.GListOfInventory
	(*GPrecisionSubject)(nil),              // 80: com.company.project.GPrecisionSubject
	(*GListOfPrecisionSubject)(nil),        // 81: com.company.project.GListOfPrecisionSubject
	(*GRecipe)(nil),                        // 82: com.company.project.GRecipe
	(*GListOfRecipe)(nil),                  // 83: com.company.project.GListOfRecipe
	(*GStarship)(nil),                      // 84: com.company.project.GStarship
	(*GListOfStarship)(nil),                // 85: com.company.project.GListOfStarship
	(*GPerson)(nil),                        // 86: com.company.project.GPerson
	(*GListOfPerson)(nil),                  // 87: com.company.project.GListOfPerson
	(*GAbstractParentClass1)(nil),          // 88: com.company.project.GAbstractParentClass1
	(*GListOfAbstractParentClass1)(nil),    // 89: com.company.project.GListOfAbstractParentClass1
	(*GFieldsOfAbstractParentClass2)(nil),  // 90: com.company.project.GFieldsOfAbstractParentClass2
	(*GAbstractParentClass2)(nil),          // 91: com.company.project.GAbstractParentClass2
	(*GListOfAbstractParentClass2)(nil),    // 92: com.company.project.GListOfAbstractParentClass2
	(*GSubClass1)(nil),                     // 93: com.company.project.GSubClass1
	(*GListOfSubClass1)(nil),               // 94: com.company.project.GListOfSubClass1
	(*GFieldsOfScheduleConstraint)(nil),    // 95: com.company.project.GFieldsOfScheduleConstraint
	(*GScheduleConstraint)(nil),            // 96: com.company.project.GScheduleConstraint
	(*GListOfScheduleConstraint)(nil),      // 97: com.company.project.GListOfScheduleConstraint
	(*GConstraintAdded)(nil),               // 98: com.company.project.GConstraintAdded
	(*GListOfConstraintAdded)(nil),         // 99: com.company.project.GListOfConstraintAdded
	(*GContestConstraint)(nil),             // 100: com.company.project.GContestConstraint
	(*GListOfContestConstraint)(nil),       // 101: com.company.project.GListOfContestConstraint
	(*GFieldsOfBranch)(nil),                // 102: com.company.project.GFieldsOfBranch
	(*GBranch)(nil),                        // 103: com.company.project.GBranch
	(*GListOfBranch)(nil),                  // 104: com.company.project.GListOfBranch
	(*GFieldsOfTwig)(nil),                  // 105: com.company.project.GFieldsOfTwig
	(*GTwig)(nil),                          // 106: com.company.project.GTwig
	(*GListOfTwig)(nil),                    // 107: com.company.project.GListOfTwig
	(*GLeaf)(nil),                          // 108: com.company.project.GLeaf
	(*GListOfLeaf)(nil),                    // 109: com.company.project.GListOfLeaf
	(*GApplianceType_Message)(nil),         // 110: com.company.project.GApplianceType_Message
	(*GRecipeTypes_Message)(nil),           // 111: com.company.project.GRecipeTypes_Message
	(*GKnifeType_Message)(nil),             // 112: com.company.project.GKnifeType_Message
	(*GChefType_Message)(nil),              // 113: com.company.project.GChefType_Message
	nil,                                    // 114: com.company.project.GKitchen.RecipeMapEntry
	nil,                                    // 115: com.company.project.GInventory.NumberOfThingsEntry
	nil,                                    // 116: com.company.project.GInventory.RecipesByNameEntry
	(*wrapperspb.Int32Value)(nil),          // 117: google.protobuf.Int32Value
	(*wrapperspb.StringValue)(nil),         // 118: google.protobuf.StringValue
	(*durationpb.Duration)(nil),            // 119: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),          // 120: google.protobuf.Timestamp
	(*wrapperspb.BoolValue)(nil),           // 121: google.protobuf.BoolValue
	(*wrapperspb.DoubleValue)(nil),         // 122: google.protobuf.DoubleValue
}
var file_model_proto_depIdxs = []int32{
	117, // 0: com.company.project.GCalcParameters.parameter3:type_name -> google.protobuf.Int32Value
	117, // 1: com.company.project.GCalcParameters.parameter4:type_name -> google.protobuf.Int32Value
	4,   // 2: com.company.project.GListOfCalcParameters.items:type_name -> com.company.project.GCalcParameters
	6,   // 3: com.company.project.GListOfCalcResult.items:type_name -> com.company.project.GCalcResult
	10,  // 4: com.company.project.GCategory.main_component:type_name -> com.company.project.GComponent
	10,  // 5: com.company.project.GCategory.alternative_component:type_name -> com.company.project.GComponent
	10,  // 6: com.company.project.GCategory.other_components:type_name -> com.company.project.GComponent
	10,  // 7: com.company.project.GCategory.secondary_components:type_name -> com.company.project.GComponent
	8,   // 8: com.company.project.GListOfCategory.items:type_name -> com.company.project.GCategory
	10,  // 9: com.company.project.GListOfComponent.items:type_name -> com.company.project.GComponent
	12,  // 10: com.company.project.GListOfConstructObject1.items:type_name -> com.company.project.GConstructObject1
	14,  // 11: com.company.project.GListOfConstructObject2.items:type_name -> com.company.project.GConstructObject2
	16,  // 12: com.company.project.GListOfConstructObject3.items:type_name -> com.company.project.GConstructObject3
	18,  // 13: com.company.project.GListOfConstructObject4.items:type_name -> com.company.project.GConstructObject4
	20,  // 14: com.company.project.GListOfConstructObject5.items:type_name -> com.company.project.GConstructObject5
	118, // 15: com.company.project.GConstructObject6.name:type_name -> google.protobuf.StringValue
	117, // 16: com.company.project.GConstructObject6.number:type_name -> google.protobuf.Int32Value
	22,  // 17: com.company.project.GListOfConstructObject6.items:type_name -> com.company.project.GConstructObject6
	117, // 18: com.company.project.GConstructObject7.number:type_name -> google.protobuf.Int32Value
	24,  // 19: com.company.project.GListOfConstructObject7.items:type_name -> com.company.project.GConstructObject7
	117, // 20: com.company.project.GConstructObject8.number:type_name -> google.protobuf.Int32Value
	26,  // 21: com.company.project.GListOfConstructObject8.items:type_name -> com.company.project.GConstructObject8
	28,  // 22: com.company.project.GListOfEmpty.items:type_name -> com.company.project.GEmpty
	30,  // 23: com.company.project.GListOfEncapsulatedFieldsClass.items:type_name -> com.company.project.GEncapsulatedFieldsClass
	119, // 24: com.company.project.GIngredient.cooking_duration:type_name -> google.protobuf.Duration
	10,  // 25: com.company.project.GIngredient.main_component:type_name -> com.company.project.GComponent
	10,  // 26: com.company.project.GIngredient.other_components:type_name -> com.company.project.GComponent
	10,  // 27: com.company.project.GIngredient.alternative_component:type_name -> com.company.project.GComponent
	10,  // 28: com.company.project.GIngredient.secondary_components:type_name -> com.company.project.GComponent
	32,  // 29: com.company.project.GListOfIngredient.items:type_name -> com.company.project.GIngredient
	34,  // 30: com.company.project.GListOfKey.items:type_name -> com.company.project.GKey
	119, // 31: com.company.project.GListsHost.vdurations:type_name -> google.protobuf.Duration
	119, // 32: com.company.project.GListsHost.nvdurations:type_name -> google.protobuf.Duration
	120, // 33: com.company.project.GListsHost.vdatetimes:type_name -> google.protobuf.Timestamp
	120, // 34: com.company.project.GListsHost.nvdatetimes:type_name -> google.protobuf.Timestamp
	0,   // 35: com.company.project.GListsHost.vappliance_types:type_name -> com.company.project.GApplianceType
	0,   // 36: com.company.project.GListsHost.nvappliance_types:type_name -> com.company.project.GApplianceType
	36,  // 37: com.company.project.GListOfListsHost.items:type_name -> com.company.project.GListsHost
	57,  // 38: com.company.project.GAirplane.fieldsOfSuperClass:type_name -> com.company.project.GFieldsOfAircraft
	38,  // 39: com.company.project.GListOfAirplane.items:type_name -> com.company.project.GAirplane
	40,  // 40: com.company.project.GListOfBalloon.items:type_name -> com.company.project.GBalloon
	54,  // 41: com.company.project.GBicycle.fieldsOfSuperClass:type_name -> com.company.project.GFieldsOfAbstractVehicle
	42,  // 42: com.company.project.GListOfBicycle.items:type_name -> com.company.project.GBicycle
	63,  // 43: com.company.project.GCar.fieldsOfSuperClass:type_name -> com.company.project.GFieldsOfVehicle
	44,  // 44: com.company.project.GListOfCar.items:type_name -> com.company.project.GCar
	46,  // 45: com.company.project.GListOfEntity.items:type_name -> com.company.project.GEntity
	60,  // 46: com.company.project.GGyrocopter.fieldsOfSuperClass:type_name -> com.company.project.GFieldsOfRotorcraft
	48,  // 47: com.company.project.GListOfGyrocopter.items:type_name -> com.company.project.GGyrocopter
	60,  // 48: com.company.project.GHelicopter.fieldsOfSuperClass:type_name -> com.company.project.GFieldsOfRotorcraft
	50,  // 49: com.company.project.GListOfHelicopter.items:type_name -> com.company.project.GHelicopter
	54,  // 50: com.company.project.GScooter.fieldsOfSuperClass:type_name -> com.company.project.GFieldsOfAbstractVehicle
	52,  // 51: com.company.project.GListOfScooter.items:type_name -> com.company.project.GScooter
	54,  // 52: com.company.project.GAbstractVehicle.abstract_vehicle:type_name -> com.company.project.GFieldsOfAbstractVehicle
	42,  // 53: com.company.project.GAbstractVehicle.bicycle:type_name -> com.company.project.GBicycle
	52,  // 54: com.company.project.GAbstractVehicle.scooter:type_name -> com.company.project.GScooter
	55,  // 55: com.company.project.GListOfAbstractVehicle.items:type_name -> com.company.project.GAbstractVehicle
	63,  // 56: com.company.project.GFieldsOfAircraft.fieldsOfSuperClass:type_name -> com.company.project.GFieldsOfVehicle
	57,  // 57: com.company.project.GAircraft.aircraft:type_name -> com.company.project.GFieldsOfAircraft
	38,  // 58: com.company.project.GAircraft.airplane:type_name -> com.company.project.GAirplane
	61,  // 59: com.company.project.GAircraft.rotorcraft:type_name -> com.company.project.GRotorcraft
	40,  // 60: com.company.project.GAircraft.balloon:type_name -> com.company.project.GBalloon
	58,  // 61: com.company.project.GListOfAircraft.items:type_name -> com.company.project.GAircraft
	57,  // 62: com.company.project.GFieldsOfRotorcraft.fieldsOfSuperClass:type_name -> com.company.project.GFieldsOfAircraft
	60,  // 63: com.company.project.GRotorcraft.rotorcraft:type_name -> com.company.project.GFieldsOfRotorcraft
	50,  // 64: com.company.project.GRotorcraft.helicopter:type_name -> com.company.project.GHelicopter
	48,  // 65: com.company.project.GRotorcraft.gyrocopter:type_name -> com.company.project.GGyrocopter
	61,  // 66: com.company.project.GListOfRotorcraft.items:type_name -> com.company.project.GRotorcraft
	63,  // 67: com.company.project.GVehicle.vehicle:type_name -> com.company.project.GFieldsOfVehicle
	58,  // 68: com.company.project.GVehicle.aircraft:type_name -> com.company.project.GAircraft
	44,  // 69: com.company.project.GVehicle.car:type_name -> com.company.project.GCar
	64,  // 70: com.company.project.GListOfVehicle.items:type_name -> com.company.project.GVehicle
	2,   // 71: com.company.project.GKnife.type:type_name -> com.company.project.GKnifeType
	66,  // 72: com.company.project.GListOfKnife.items:type_name -> com.company.project.GKnife
	68,  // 73: com.company.project.GListOfGarlicPress.items:type_name -> com.company.project.GGarlicPress
	82,  // 74: com.company.project.GKitchen.recipe_list:type_name -> com.company.project.GRecipe
	114, // 75: com.company.project.GKitchen.recipe_map:type_name -> com.company.project.GKitchen.RecipeMapEntry
	120, // 76: com.company.project.GKitchen.next_inspection_date:type_name -> google.protobuf.Timestamp
	70,  // 77: com.company.project.GListOfKitchen.items:type_name -> com.company.project.GKitchen
	82,  // 78: com.company.project.GChef.favorite_recipe:type_name -> com.company.project.GRecipe
	66,  // 79: com.company.project.GChef.favorite_knife:type_name -> com.company.project.GKnife
	0,   // 80: com.company.project.GChef.favorite_appliance_type:type_name -> com.company.project.GApplianceType
	120, // 81: com.company.project.GChef.birthdate:type_name -> google.protobuf.Timestamp
	119, // 82: com.company.project.GChef.shelf_life:type_name -> google.protobuf.Duration
	72,  // 83: com.company.project.GListOfChef.items:type_name -> com.company.project.GChef
	72,  // 84: com.company.project.GSousChef.fieldsOfSuperClass:type_name -> com.company.project.GChef
	74,  // 85: com.company.project.GListOfSousChef.items:type_name -> com.company.project.GSousChef
	72,  // 86: com.company.project.GKnifeMaster.fieldsOfSuperClass:type_name -> com.company.project.GChef
	66,  // 87: com.company.project.GKnifeMaster.favorite_knife:type_name -> com.company.project.GKnife
	76,  // 88: com.company.project.GListOfKnifeMaster.items:type_name -> com.company.project.GKnifeMaster
	115, // 89: com.company.project.GInventory.number_of_things:type_name -> com.company.project.GInventory.NumberOfThingsEntry
	116, // 90: com.company.project.GInventory.recipes_by_name:type_name -> com.company.project.GInventory.RecipesByNameEntry
	119, // 91: com.company.project.GInventory.time_span:type_name -> google.protobuf.Duration
	78,  // 92: com.company.project.GListOfInventory.items:type_name -> com.company.project.GInventory
	120, // 93: com.company.project.GPrecisionSubject.date_property:type_name -> google.protobuf.Timestamp
	119, // 94: com.company.project.GPrecisionSubject.duration_property:type_name -> google.protobuf.Duration
	80,  // 95: com.company.project.GListOfPrecisionSubject.items:type_name -> com.company.project.GPrecisionSubject
	118, // 96: com.company.project.GRecipe.description:type_name -> google.protobuf.StringValue
	8,   // 97: com.company.project.GRecipe.category:type_name -> com.company.project.GCategory
	32,  // 98: com.company.project.GRecipe.ingredients:type_name -> com.company.project.GIngredient
	120, // 99: com.company.project.GRecipe.publish_date:type_name -> google.protobuf.Timestamp
	120, // 100: com.company.project.GRecipe.expiry_date:type_name -> google.protobuf.Timestamp
	119, // 101: com.company.project.GRecipe.preparation_duration:type_name -> google.protobuf.Duration
	119, // 102: com.company.project.GRecipe.total_duration:type_name -> google.protobuf.Duration
	121, // 103: com.company.project.GRecipe.requires_robot:type_name -> google.protobuf.BoolValue
	122, // 104: com.company.project.GRecipe.gross_weight:type_name -> google.protobuf.DoubleValue
	122, // 105: com.company.project.GRecipe.net_weight:type_name -> google.protobuf.DoubleValue
	0,   // 106: com.company.project.GRecipe.main_appliance_type:type_name -> com.company.project.GApplianceType
	110, // 107: com.company.project.GRecipe.secondary_appliance_type:type_name -> com.company.project.GApplianceType_Message
	82,  // 108: com.company.project.GListOfRecipe.items:type_name -> com.company.project.GRecipe
	84,  // 109: com.company.project.GListOfStarship.items:type_name -> com.company.project.GStarship
	121, // 110: com.company.project.GPerson.bool_value:type_name -> google.protobuf.BoolValue
	86,  // 111: com.company.project.GListOfPerson.items:type_name -> com.company.project.GPerson
	88,  // 112: com.company.project.GListOfAbstractParentClass1.items:type_name -> com.company.project.GAbstractParentClass1
	90,  // 113: com.company.project.GAbstractParentClass2.abstract_parent_class2:type_name -> com.company.project.GFieldsOfAbstractParentClass2
	93,  // 114: com.company.project.GAbstractParentClass2.sub_class1:type_name -> com.company.project.GSubClass1
	91,  // 115: com.company.project.GListOfAbstractParentClass2.items:type_name -> com.company.project.GAbstractParentClass2
	90,  // 116: com.company.project.GSubClass1.fieldsOfSuperClass:type_name -> com.company.project.GFieldsOfAbstractParentClass2
	93,  // 117: com.company.project.GListOfSubClass1.items:type_name -> com.company.project.GSubClass1
	95,  // 118: com.company.project.GScheduleConstraint.schedule_constraint:type_name -> com.company.project.GFieldsOfScheduleConstraint
	100, // 119: com.company.project.GScheduleConstraint.contest_constraint:type_name -> com.company.project.GContestConstraint
	96,  // 120: com.company.project.GListOfScheduleConstraint.items:type_name -> com.company.project.GScheduleConstraint
	98,  // 121: com.company.project.GListOfConstraintAdded.items:type_name -> com.company.project.GConstraintAdded
	95,  // 122: com.company.project.GContestConstraint.fieldsOfSuperClass:type_name -> com.company.project.GFieldsOfScheduleConstraint
	100, // 123: com.company.project.GListOfContestConstraint.items:type_name -> com.company.project.GContestConstraint
	102, // 124: com.company.project.GBranch.branch:type_name -> com.company.project.GFieldsOfBranch
	106, // 125: com.company.project.GBranch.twig:type_name -> com.company.project.GTwig
	103, // 126: com.company.project.GListOfBranch.items:type_name -> com.company.project.GBranch
	102, // 127: com.company.project.GFieldsOfTwig.fieldsOfSuperClass:type_name -> com.company.project.GFieldsOfBranch
	105, // 128: com.company.project.GTwig.twig:type_name -> com.company.project.GFieldsOfTwig
	108, // 129: com.company.project.GTwig.leaf:type_name -> com.company.project.GLeaf
	106, // 130: com.company.project.GListOfTwig.items:type_name -> com.company.project.GTwig
	105, // 131: com.company.project.GLeaf.fieldsOfSuperClass:type_name -> com.company.project.GFieldsOfTwig
	108, // 132: com.company.project.GListOfLeaf.items:type_name -> com.company.project.GLeaf
	0,   // 133: com.company.project.GApplianceType_Message.value:type_name -> com.company.project.GApplianceType
	1,   // 134: com.company.project.GRecipeTypes_Message.value:type_name -> com.company.project.GRecipeTypes
	2,   // 135: com.company.project.GKnifeType_Message.value:type_name -> com.company.project.GKnifeType
	3,   // 136: com.company.project.GChefType_Message.value:type_name -> com.company.project.GChefType
	82,  // 137: com.company.project.GKitchen.RecipeMapEntry.value:type_name -> com.company.project.GRecipe
	82,  // 138: com.company.project.GInventory.RecipesByNameEntry.value:type_name -> com.company.project.GRecipe
	139, // [139:139] is the sub-list for method output_type
	139, // [139:139] is the sub-list for method input_type
	139, // [139:139] is the sub-list for extension type_name
	139, // [139:139] is the sub-list for extension extendee
	0,   // [0:139] is the sub-list for field type_name
}

func init() { file_model_proto_init() }
func file_model_proto_init() {
	if File_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCalcParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfCalcParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCalcResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfCalcResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GConstructObject1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfConstructObject1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GConstructObject2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfConstructObject2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GConstructObject3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfConstructObject3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GConstructObject4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfConstructObject4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GConstructObject5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfConstructObject5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GConstructObject6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfConstructObject6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GConstructObject7); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfConstructObject7); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GConstructObject8); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfConstructObject8); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GEncapsulatedFieldsClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfEncapsulatedFieldsClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GIngredient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfIngredient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListsHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfListsHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GAirplane); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfAirplane); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBalloon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfBalloon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBicycle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfBicycle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfCar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GGyrocopter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfGyrocopter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GHelicopter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfHelicopter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GScooter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfScooter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GFieldsOfAbstractVehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GAbstractVehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfAbstractVehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GFieldsOfAircraft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GAircraft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfAircraft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GFieldsOfRotorcraft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GRotorcraft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfRotorcraft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GFieldsOfVehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GVehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfVehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GKnife); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfKnife); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GGarlicPress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfGarlicPress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GKitchen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfKitchen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GChef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfChef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GSousChef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfSousChef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GKnifeMaster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfKnifeMaster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPrecisionSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfPrecisionSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GRecipe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfRecipe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GStarship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfStarship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GPerson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfPerson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GAbstractParentClass1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfAbstractParentClass1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GFieldsOfAbstractParentClass2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GAbstractParentClass2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfAbstractParentClass2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GSubClass1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfSubClass1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GFieldsOfScheduleConstraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GScheduleConstraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfScheduleConstraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GConstraintAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfConstraintAdded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GContestConstraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfContestConstraint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GFieldsOfBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GFieldsOfTwig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GTwig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfTwig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GLeaf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GListOfLeaf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GApplianceType_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GRecipeTypes_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GKnifeType_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GChefType_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_model_proto_msgTypes[51].OneofWrappers = []interface{}{
		(*GAbstractVehicle_AbstractVehicle)(nil),
		(*GAbstractVehicle_Bicycle)(nil),
		(*GAbstractVehicle_Scooter)(nil),
	}
	file_model_proto_msgTypes[54].OneofWrappers = []interface{}{
		(*GAircraft_Aircraft)(nil),
		(*GAircraft_Airplane)(nil),
		(*GAircraft_Rotorcraft)(nil),
		(*GAircraft_Balloon)(nil),
	}
	file_model_proto_msgTypes[57].OneofWrappers = []interface{}{
		(*GRotorcraft_Rotorcraft)(nil),
		(*GRotorcraft_Helicopter)(nil),
		(*GRotorcraft_Gyrocopter)(nil),
	}
	file_model_proto_msgTypes[60].OneofWrappers = []interface{}{
		(*GVehicle_Vehicle)(nil),
		(*GVehicle_Aircraft)(nil),
		(*GVehicle_Car)(nil),
	}
	file_model_proto_msgTypes[87].OneofWrappers = []interface{}{
		(*GAbstractParentClass2_AbstractParentClass2)(nil),
		(*GAbstractParentClass2_SubClass1)(nil),
	}
	file_model_proto_msgTypes[92].OneofWrappers = []interface{}{
		(*GScheduleConstraint_ScheduleConstraint)(nil),
		(*GScheduleConstraint_ContestConstraint)(nil),
	}
	file_model_proto_msgTypes[99].OneofWrappers = []interface{}{
		(*GBranch_Branch)(nil),
		(*GBranch_Twig)(nil),
	}
	file_model_proto_msgTypes[102].OneofWrappers = []interface{}{
		(*GTwig_Twig)(nil),
		(*GTwig_Leaf)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   113,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_proto_goTypes,
		DependencyIndexes: file_model_proto_depIdxs,
		EnumInfos:         file_model_proto_enumTypes,
		MessageInfos:      file_model_proto_msgTypes,
	}.Build()
	File_model_proto = out.File
	file_model_proto_rawDesc = nil
	file_model_proto_goTypes = nil
	file_model_proto_depIdxs = nil
}
